// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// migrations/sql/shared/1.sql
// migrations/sql/shared/2.sql
// migrations/sql/shared/3.sql
// migrations/sql/shared/4.sql
// migrations/sql/mysql/.gitkeep
// migrations/sql/mysql/5.sql
// migrations/sql/mysql/6.sql
// migrations/sql/mysql/7.sql
// migrations/sql/mysql/8.sql
// migrations/sql/postgres/.gitkeep
// migrations/sql/postgres/5.sql
// migrations/sql/postgres/6.sql
// migrations/sql/postgres/7.sql
// migrations/sql/postgres/8.sql
// migrations/sql/tests/.gitkeep
// migrations/sql/tests/1_test.sql
// migrations/sql/tests/2_test.sql
// migrations/sql/tests/3_test.sql
// migrations/sql/tests/4_test.sql
// migrations/sql/tests/5_test.sql
// migrations/sql/tests/6_test.sql
// migrations/sql/tests/7_test.sql
// migrations/sql/tests/8_test.sql
package oauth2

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrationsSqlShared1Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x31\x6f\xf2\x30\x10\x86\x67\xfb\x57\xdc\x08\xfa\x60\x41\x62\x62\xca\x57\x8c\x84\x9a\x02\x0a\x41\x2a\x53\x74\xb2\x8f\xc4\x52\x63\xa7\xb6\x53\xda\x7f\x5f\x85\xa6\x82\x22\x22\xb5\x03\x5b\xb2\x3e\xef\xbd\xb1\x1e\x5b\x37\x1e\xc3\xbf\x52\xe7\x0e\x03\xc1\xae\xe2\x0f\x89\x88\x52\x01\x69\xf4\x3f\x16\xb0\x5c\xc0\x6a\x9d\x82\x78\x5e\x6e\xd3\x2d\x14\x1f\xca\x61\x66\xb1\x0e\xc5\x24\x43\x29\xc9\x7b\x18\x70\xe6\x75\x6e\x30\xd4\x8e\xe0\xf4\xb1\x37\x74\xb2\x40\x37\x98\x4c\xa7\xc3\xd3\xf8\x6a\x17\xc7\xb0\x49\x96\x4f\x51\xb2\x87\x47\xb1\x1f\x71\xe6\xe8\xb5\x26\x1f\x32\xad\x00\x18\xc0\xcd\x91\x73\x8c\x54\x86\x01\x80\x05\x5d\x92\x0f\x58\x56\xe7\xda\xb9\x58\x44\xbb\x38\x05\x63\x8f\x83\xe1\x88\x33\xf9\xa2\xc9\xb4\xbd\x0c\x20\xd0\x7b\xb8\x2c\xf4\xd2\x56\xd4\x20\xd6\x1c\xf5\x9a\xe6\x0e\x4d\xf3\xb3\xaf\x14\xbb\xc6\x07\xeb\xca\x4c\x61\xc0\x8e\x6e\xf2\x5e\x5b\xf3\x9d\xf8\x81\xf9\x70\xc6\x7f\xad\xd6\xd1\xc1\x91\x2f\x7a\xb7\x77\x70\x2b\xad\xa2\x5e\xec\x1d\xc4\x5a\xad\x64\x2f\xf6\x0f\x62\x2f\xf7\xee\xdc\x1e\x0d\x9f\x27\xeb\x4d\xeb\xf9\xc6\xa6\x9d\x75\xf2\x76\x5d\x74\x07\x9a\x37\xdf\x4d\x9b\x8b\x9b\xf1\xcf\x00\x00\x00\xff\xff\x94\xd2\x19\xdf\x06\x06\x00\x00")

func migrationsSqlShared1SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared1Sql,
		"migrations/sql/shared/1.sql",
	)
}

func migrationsSqlShared1Sql() (*asset, error) {
	bytes, err := migrationsSqlShared1SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/1.sql", size: 1542, mode: os.FileMode(438), modTime: time.Unix(1542556438, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared2Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xb1\x0a\xc2\x30\x14\x45\xf7\x7e\xc5\xdd\xaa\x48\x97\x42\x27\xa7\x68\xea\x14\x5b\x29\xc9\x5c\x62\x1a\x4d\x05\x8d\xbc\xb4\x8a\x7f\x2f\x14\x04\x07\x45\x0b\xfd\x80\x73\x2e\xf7\x24\x09\x16\xe7\xf6\x48\xba\xb3\x50\xd7\x88\x09\x99\x57\x90\x6c\x25\x72\xb8\x47\x43\xba\xf6\xba\xef\x5c\x5a\x6b\x63\x6c\x08\x60\x9c\x23\xf4\xfb\x93\x35\x1d\x6e\x9a\x8c\xd3\x34\x4b\xb3\x6c\x8e\xa2\x94\x28\x94\x10\xe0\xf9\x86\x29\x21\x11\xc7\xcb\xef\x36\xb2\x07\xb2\xc1\x4d\xa5\x33\xbe\xb1\x53\xb9\x7c\xdb\x98\x91\xae\xe8\x3d\x22\xf7\xf7\xcb\xcf\x8c\xe0\x55\xb9\xc3\xba\x14\x6a\x5b\xbc\x86\xfe\xc8\x35\x8e\x1a\xaa\x8c\x43\x86\xf3\x1f\x91\x67\x00\x00\x00\xff\xff\xa3\x05\x9b\x27\x28\x02\x00\x00")

func migrationsSqlShared2SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared2Sql,
		"migrations/sql/shared/2.sql",
	)
}

func migrationsSqlShared2Sql() (*asset, error) {
	bytes, err := migrationsSqlShared2SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/2.sql", size: 552, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared3Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\x6e\xc2\x30\x10\x86\x67\xfb\x29\x6e\x24\x2a\x2c\x48\x4c\x4c\x69\x63\xa4\xa8\x29\xa0\x90\x48\x65\x8a\xae\xc9\x35\x71\xdb\xd8\xa9\x7d\x29\xed\xdb\x57\x01\x2a\x10\x50\xaf\xdf\x7f\xdf\xd9\xfe\x27\x13\xb8\x6b\x75\xed\x90\x09\xf2\x4e\x3e\xa4\x2a\xcc\x14\x64\xe1\x7d\xa2\x20\x5e\xc0\x72\x95\x81\x7a\x8e\x37\xd9\x06\x9a\x9f\xca\x61\x61\xb1\xe7\x66\x5a\x74\xef\x25\xc1\x48\x0a\xaf\x6b\x83\xdc\x3b\x82\xfd\x11\x5f\xe8\xca\x06\xdd\x68\x3a\x9b\x05\xfb\xe1\x65\x9e\x24\xb0\x4e\xe3\xa7\x30\xdd\xc2\xa3\xda\x8e\xa5\x70\xf4\xd9\x93\xe7\x42\x57\x00\x02\xe0\xe6\xc8\x29\x46\x55\x81\x0c\x20\x58\xb7\xe4\x19\xdb\xee\xa4\x8d\xd4\x22\xcc\x93\x0c\x8c\xdd\x8d\x82\xb1\x14\xe5\x87\x26\x73\xf4\x0a\x00\xa6\x6f\x3e\x17\xfa\xd2\x76\x34\x20\x31\x5c\xf5\x92\xd6\x0e\xcd\xb0\xec\x90\x12\x97\xf8\xd5\xba\xb6\xa8\x90\xf1\x1f\x37\x79\xaf\xad\xf9\x4b\x5c\xe1\xfe\xe5\x8d\x4a\x86\xc3\xea\x9b\x2f\x96\xc1\x5c\xca\xf3\x36\x22\xbb\x33\x32\x4a\x57\xeb\x63\x1b\x57\xff\x3f\x97\xbf\x01\x00\x00\xff\xff\x58\x5f\xd7\xfa\xbd\x01\x00\x00")

func migrationsSqlShared3SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared3Sql,
		"migrations/sql/shared/3.sql",
	)
}

func migrationsSqlShared3Sql() (*asset, error) {
	bytes, err := migrationsSqlShared3SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/3.sql", size: 445, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared4Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd0\xb1\x0e\x82\x30\x10\xc6\xf1\x9d\xa7\xf8\x76\xc3\xe2\xea\x54\x6c\x9d\x4e\x6a\x48\x3b\x93\xa6\x9c\x42\x8c\x96\x14\xd4\xf8\xf6\x26\xc4\xc1\x41\x23\xa4\x0f\xf0\xfd\xef\xf2\xcb\x73\xac\x2e\xdd\x29\xba\x91\x61\xfb\x4c\x90\x51\x15\x8c\x28\x48\xa1\x7d\x36\xd1\xd5\xc1\xdd\xc6\x76\x5d\x3b\xef\x79\x18\x20\xa4\x84\xf3\x63\x77\x67\x14\x5a\x13\x4a\x6d\x50\x5a\x22\x48\xb5\x13\x96\x0c\x4c\x65\xd5\xe6\x77\x26\xf2\x31\xf2\xd0\x26\x77\x7c\x68\x38\x39\x12\xba\xc6\x27\x47\xfa\xb3\x9f\xfd\x49\xf6\xa9\x2d\xc3\xe3\xfa\xd7\x5b\x56\xfa\x80\xad\x26\xbb\x2f\xdf\x07\x66\xe0\x2e\x1a\x4d\x92\x8b\x16\x13\xdb\xa2\xc5\x64\xf4\x6d\xf1\x0a\x00\x00\xff\xff\xcb\x7a\x0d\xdc\x7e\x02\x00\x00")

func migrationsSqlShared4SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared4Sql,
		"migrations/sql/shared/4.sql",
	)
}

func migrationsSqlShared4Sql() (*asset, error) {
	bytes, err := migrationsSqlShared4SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/4.sql", size: 638, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysqlGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlMysqlGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysqlGitkeep,
		"migrations/sql/mysql/.gitkeep",
	)
}

func migrationsSqlMysqlGitkeep() (*asset, error) {
	bytes, err := migrationsSqlMysqlGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/.gitkeep", size: 0, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql5Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\x0e\x72\x75\x0c\x71\x55\x08\xf5\xf3\x0c\x0c\x75\x55\xf0\xf4\x73\x71\x8d\x50\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\x4c\x4e\x4e\x2d\x2e\x8e\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x89\xcf\x4c\x89\xcf\x4c\xa9\x50\xf0\xf7\xc3\xa6\x4a\x41\x03\xa1\x4c\xd3\x9a\xb0\xd9\x45\xa9\x69\x45\xa9\xc5\x19\x84\x0c\x87\x2a\x43\x33\x9d\x0b\xd9\x27\x2e\xf9\xe5\x79\x5c\x2e\x41\xfe\x01\x94\x7a\xc1\x1a\xa7\x29\xa4\x39\xd6\x9a\x0b\x10\x00\x00\xff\xff\x5b\x41\x11\xcf\x69\x01\x00\x00")

func migrationsSqlMysql5SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql5Sql,
		"migrations/sql/mysql/5.sql",
	)
}

func migrationsSqlMysql5Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql5SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/5.sql", size: 361, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql6Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\x0e\x72\x75\x0c\x71\x55\xf0\xf4\x73\x71\x8d\x50\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\x4c\x4e\x4e\x2d\x2e\x8e\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x49\x4d\x89\x4f\x2c\x89\xcf\x4c\xa9\x50\xf0\xf7\xc3\xa6\x4e\x41\x03\x59\xa1\xa6\x35\x17\x17\xb2\x45\x2e\xf9\xe5\x79\x5c\x2e\x41\xfe\x01\x94\x5b\x64\xcd\x05\x08\x00\x00\xff\xff\xf1\x5f\x27\x42\xc2\x00\x00\x00")

func migrationsSqlMysql6SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql6Sql,
		"migrations/sql/mysql/6.sql",
	)
}

func migrationsSqlMysql6Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql6SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/6.sql", size: 194, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql7Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x95\x4d\x6a\xc3\x30\x10\x85\xf7\x39\x85\x76\x59\x94\x6c\xba\x0d\x5d\xb8\x95\x0b\x05\x27\x0e\xa9\x0c\xed\xca\x08\x69\x1a\x9b\x52\x3b\x95\x6d\x4a\x6f\x1f\x18\xb0\x10\xfe\xc1\x99\xf1\x01\x9e\xde\xa7\x6f\x64\xcf\x6e\x27\x1e\x7e\xca\x8b\xd3\x2d\x88\xec\xba\x89\x12\x15\x9f\x85\x8a\x9e\x93\x58\x14\xff\xd6\xe9\xbc\xd6\x5d\x5b\x3c\xe6\xda\x18\x68\x1a\x11\x49\x29\x1c\xfc\x76\xd0\xb4\x60\x73\xdd\xd9\x12\x2a\x03\x42\xc5\x1f\x4a\x1c\xb3\x24\xd9\x6f\xb2\x93\x8c\xd4\x74\xf8\x3d\x56\x13\xe1\xa7\xed\x76\xbf\xd8\x7b\x48\xe5\xdb\xeb\xe7\x7c\x75\xda\xd7\xdf\x73\x81\x8b\xd3\x15\x13\x7f\x18\xa5\xc0\xcf\xd4\x7a\xf4\xf9\x73\x1c\x7c\x39\x68\x0a\xa6\xfd\x3e\xcd\xd1\xdf\x67\xd7\xfb\x0f\xef\x40\x1d\x40\x78\x03\xda\x04\x06\xfc\xfc\x11\x98\xda\x02\xd3\x3f\x46\x39\xf2\x31\xb8\xde\xbc\x47\xa7\x6a\xf7\xe0\x34\xe7\x21\x36\x5f\x78\x5d\x5a\xc3\x14\x8e\x51\x8e\x70\x0c\xae\x17\xee\xd1\xa9\xc2\x3d\x38\x4d\x78\x88\xcd\x17\x7e\xfd\x36\xdc\x17\x8e\x51\x8e\x70\x0c\xae\x17\xee\xd1\xa9\xc2\x3d\x38\x4d\x78\x88\xbd\x28\x3c\xdc\xb0\xb2\xfe\xab\x16\xd7\x85\x3c\xa7\x27\xf1\x92\x26\xd9\xe1\x38\x21\x65\x79\xdd\x84\xf9\x21\xdd\x3d\x5b\x86\xdd\x3f\x75\x00\x05\x00\x7f\x1c\xec\xf6\x51\x9a\x52\x8d\x9f\x10\xbb\x7a\x94\xa6\x54\xe3\x63\x62\x57\x8f\xd2\xe3\xea\x5b\x00\x00\x00\xff\xff\xd3\x68\x22\x03\xe3\x09\x00\x00")

func migrationsSqlMysql7SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql7Sql,
		"migrations/sql/mysql/7.sql",
	)
}

func migrationsSqlMysql7Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql7SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/7.sql", size: 2531, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql8Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x98\x5f\x6f\x9b\x30\x14\xc5\xdf\xf3\x29\xee\x5b\x53\x4d\xa9\xba\xa8\x79\x8a\x36\x89\x05\xa7\x8d\x46\x61\x22\x54\x6b\x9f\x22\x04\x6e\x41\x25\xd0\x01\x6d\xb6\x6f\x3f\xe1\x25\x8d\x09\x7f\x7c\x8d\x49\x97\xd7\x84\xfb\xf3\x91\xef\x39\xf8\x9a\xd1\x08\x3e\xad\xc3\xa7\xd4\xcd\x29\xdc\xbd\x0c\x74\x62\x10\x87\xc0\xdc\xb6\x6e\x21\xf8\xe3\xa7\xee\x2a\x71\x5f\xf3\x60\xbc\x72\x3d\x8f\x66\x19\xfc\xbc\x21\x36\x01\xd3\x72\x80\xdc\x2f\x96\xce\x12\x86\x4b\x62\x90\x99\x03\x9f\xf9\x1a\x2f\x0a\x69\x9c\x6f\x1f\xae\xc1\x5c\xfc\x7b\x60\x15\xfa\xf0\xa5\x54\x72\x11\xfa\xe7\xd3\x66\x11\x29\x7d\x4c\x69\x16\x28\xab\xd8\x72\xba\xca\xf0\x12\x9f\x2a\x6b\x28\x20\x5d\x05\x24\xa1\xef\x29\x0b\x28\x20\x5d\x05\xbc\x3c\x7b\xea\x3b\x50\x40\x04\x02\x7a\xf2\xe3\xfb\x96\xc7\x59\xb1\x58\x4a\x7f\xbd\xd2\x2c\x5f\x05\x6e\xec\x47\xd4\x6f\xf1\xe9\xee\x49\x4e\x5e\x3b\xeb\xc2\x0b\xdc\x28\xa2\xf1\x13\xed\xcf\xc7\xf2\xea\x77\xfe\x3e\x92\x7c\x09\xff\xcb\x6b\x67\xb9\x38\x92\x70\x89\xdc\xc8\x0b\x67\x79\x3a\x92\x70\x89\xbc\xc9\x0b\x67\x39\x54\x13\x8e\xcc\xa9\x41\xcc\x6b\xe7\x66\xb8\x5f\xeb\x1c\xbe\xc2\xd5\x25\x58\x36\x94\xd6\x3f\x3b\x43\x87\xa7\x17\x24\x67\xe8\x5e\x78\x9c\xcf\x7a\xe1\x71\xed\x97\xe1\x0d\x34\xc3\x21\x36\x38\xda\x37\xa3\xf6\xf5\x06\xb7\x96\xbe\x98\x3f\xf0\x85\x6f\x6e\xea\x05\x6e\x3a\xbc\xba\x3c\x67\x4e\x33\xef\x0c\x63\xda\xcc\xd9\xf5\x42\x19\xc4\x3a\xa0\x4c\x61\xfb\xae\x4c\x61\xbb\x8d\xa5\x0c\x46\x23\xd8\x50\x70\xa3\x2c\x81\x8d\x1b\xe7\x90\x27\x90\xd2\x75\xf2\x56\xfc\x16\x81\x97\x44\xaf\xeb\x38\x83\x3c\x70\x73\x08\xdc\xe2\x57\xd8\x9e\x88\xa1\x0f\x9b\x30\x0f\x60\x9d\xa4\x14\xf2\x80\xc6\x30\x9e\x4c\xa0\x58\x22\x93\x8b\xd3\xfb\x11\x5a\x58\x61\x3c\x99\xc8\x66\x47\xa2\xbe\x1a\x14\x89\xe2\x6a\x2a\x24\x8a\xab\x11\xa8\x16\x63\xfd\xbe\x9f\x39\x76\x3d\x1d\x4f\x26\x5d\xfc\xde\x1d\xc4\xfb\xbd\x3b\x85\xf7\x7b\x77\x0a\xef\x77\x21\x65\x30\xb3\x89\xe6\x10\x58\x98\x3a\xb9\xaf\xdb\xe4\xd5\x3b\x62\x15\xfa\xbf\xc1\x32\x6b\x3b\xc1\x75\x6f\xda\x82\xdc\xee\xb7\x80\xb9\xeb\x0a\x12\x5a\xec\xbd\x80\xc8\xda\x83\xc4\x15\x4d\x10\xe0\x58\x9f\x90\xb8\xa2\x1b\x02\x1c\x6b\x58\x09\x27\x74\xbe\xa6\xeb\x30\xb3\xcc\xa5\x63\x6b\x0b\xd3\x11\xf4\xed\xf1\x19\xe6\x96\x4d\x16\xd7\x26\x7c\x27\x0f\xfc\x4a\x60\x93\x39\xb1\x89\x39\x23\xcb\xd2\xb4\x3e\x2c\xfe\xb3\x4c\xd8\xc6\x77\xa6\x2d\x67\x9a\x4e\x10\x41\x6a\xd3\x55\x6d\xfe\x07\x08\x63\x9d\x6f\x53\x75\xe0\x9e\x0f\x90\xc4\xdc\xd3\x26\xe9\xc0\x81\x1f\x20\x89\x39\xb0\x4d\xd2\x81\x8b\xfb\x93\xd4\x87\xd3\xf7\x87\x7a\x45\x18\x3f\x57\x55\x94\xb5\x0f\xc4\xc3\xfd\x40\x7c\xb4\x28\x9c\x96\x72\x5c\x56\x4e\x4b\x33\x2e\x4c\xa7\xa5\x19\x97\xb6\xff\xa2\x79\xc0\x7f\x3f\xd4\x93\x4d\x2c\xcc\xa7\x6e\x5b\x3f\x4a\xea\x44\x67\x11\x22\x3a\xed\xcc\xba\x73\x44\xe4\xea\x76\x62\xe5\x0c\x10\x19\xae\x1d\x57\x79\x7f\x8b\xbc\xd0\x8e\xab\xbc\x7b\x11\x6f\x4d\x54\x57\x4a\x0e\xeb\xad\x2d\x58\x2a\xb6\x2f\x58\x1e\xb6\x31\x58\x1e\xb6\x33\x07\xbc\x01\x2b\x51\x1b\xa7\xa7\x8d\x10\xa9\x01\xba\x19\x83\x1c\x99\x9b\x01\xc8\x21\xb9\x19\x80\x1c\x8b\x95\x3e\x7a\x74\xbc\x05\x2a\x90\x04\x9f\x3d\xba\xdc\x03\x15\x30\x82\x0f\x1f\x87\x37\x41\xe9\xdb\xb6\x43\xee\x1d\xa5\x5b\x36\x16\x50\x7f\xbb\xc6\x56\xd7\xdf\xaa\xb1\xd5\xf5\xb7\xe9\x72\xf5\xdf\x00\x00\x00\xff\xff\x7d\xa0\x28\x87\x75\x1b\x00\x00")

func migrationsSqlMysql8SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql8Sql,
		"migrations/sql/mysql/8.sql",
	)
}

func migrationsSqlMysql8Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql8SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/8.sql", size: 7029, mode: os.FileMode(438), modTime: time.Unix(1542577490, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgresGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlPostgresGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgresGitkeep,
		"migrations/sql/postgres/.gitkeep",
	)
}

func migrationsSqlPostgresGitkeep() (*asset, error) {
	bytes, err := migrationsSqlPostgresGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/.gitkeep", size: 0, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres5Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\x0e\x72\x75\x0c\x71\x55\x08\xf5\xf3\x0c\x0c\x75\x55\xf0\xf4\x73\x71\x8d\x50\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\x4c\x4e\x4e\x2d\x2e\x8e\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x89\xcf\x4c\x89\xcf\x4c\xa9\x50\xf0\xf7\xc3\xa6\x4a\x41\x03\xa1\x4c\xd3\x9a\xb0\xd9\x45\xa9\x69\x45\xa9\xc5\x19\x84\x0c\x87\x2a\x43\x33\x9d\x0b\xd9\x27\x2e\xf9\xe5\x79\x5c\x2e\x41\xfe\x01\x44\x7b\xc1\x1a\xa7\x72\xec\xae\xb2\xe6\x02\x04\x00\x00\xff\xff\x35\xd0\xf0\x59\x3a\x01\x00\x00")

func migrationsSqlPostgres5SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres5Sql,
		"migrations/sql/postgres/5.sql",
	)
}

func migrationsSqlPostgres5Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres5SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/5.sql", size: 314, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres6Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\x0e\x72\x75\x0c\x71\x55\xf0\xf4\x73\x71\x8d\x50\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\x4c\x4e\x4e\x2d\x2e\x8e\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x49\x4d\x89\x4f\x2c\x89\xcf\x4c\xa9\x50\xf0\xf7\xc3\xa6\x4e\x41\x03\x59\xa1\xa6\x35\x17\x17\xb2\x45\x2e\xf9\xe5\x79\x5c\x2e\x41\xfe\x01\x24\x58\x64\xcd\x05\x08\x00\x00\xff\xff\xd2\x18\x3e\xa9\xab\x00\x00\x00")

func migrationsSqlPostgres6SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres6Sql,
		"migrations/sql/postgres/6.sql",
	)
}

func migrationsSqlPostgres6Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres6SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/6.sql", size: 171, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres7Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xb1\x4e\x86\x30\x14\x46\x77\x9f\xe2\x6e\x0c\x86\xc5\xd5\xa9\xda\x3a\x55\x30\xa4\x4d\xdc\x48\xd3\x5e\x81\x18\x29\xb6\x10\xe3\xdb\x9b\x30\x10\x22\xfc\xa1\x94\x3e\xc0\x3d\xe7\xa4\xf9\x9a\xe7\x70\xff\xd5\x35\x4e\x8d\x08\x72\xb8\x23\x5c\xb0\x0a\x04\x79\xe2\x0c\xda\x5f\xe3\x54\x6d\xd5\x34\xb6\x0f\xb5\xd2\x1a\xbd\x07\x42\x29\x38\xfc\x9e\xd0\x8f\x68\x6a\x35\x99\x0e\x7b\x8d\x20\xd8\xbb\x80\x42\x72\x0e\x94\xbd\x10\xc9\x05\x64\xd9\x63\x10\xac\x71\xaa\x0f\x40\xdd\x66\x39\xfc\x70\xe8\xdb\x44\x65\x6b\xda\xe5\x34\x6d\x0d\x26\xea\x5a\x50\x97\xa3\x6c\x67\x74\xa2\xa8\x05\x75\x39\x6a\xf8\xd4\xa9\x5e\x6a\x41\x85\x46\xad\x7f\x00\xb5\x3f\xfd\xe1\x6c\x69\x55\xbe\xc1\x73\xc9\xe5\x6b\xb1\xd3\x7b\x3c\xfb\xf5\xfd\xff\xc8\x90\xa5\x47\xfb\xf7\x00\x67\x02\xe6\x11\x46\xdb\x37\xd7\x67\xd4\xf3\xd4\xa2\xd5\x9b\xeb\x33\xea\x79\x50\xd1\xea\xcd\xf5\x8e\xfa\x2f\x00\x00\xff\xff\x9b\xb9\x9f\x6f\x84\x05\x00\x00")

func migrationsSqlPostgres7SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres7Sql,
		"migrations/sql/postgres/7.sql",
	)
}

func migrationsSqlPostgres7Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres7SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/7.sql", size: 1412, mode: os.FileMode(438), modTime: time.Unix(1542556438, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres8Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x51\x53\xe2\x3a\x1c\xc5\xdf\xf9\x14\xff\x37\x71\xee\xe0\x78\x19\x79\x72\xbc\x33\x5c\x1a\x94\xb9\xd8\x3a\x25\xce\xd5\x27\x26\xdb\xfe\xb5\x1d\x4b\xeb\x36\x51\xdc\xfd\xf4\x3b\x29\x05\x0a\xc5\x26\x29\x85\xf5\x61\xdf\x14\x9a\x5f\x0f\x39\xe7\x24\x4d\x3b\x1d\xf8\x6b\x16\x3e\xa7\x4c\x20\xdc\xbf\xb6\x2c\x32\x26\x94\xc0\xd0\x75\x6e\x21\xf8\xe1\xa7\x6c\x9a\xb0\x37\x11\x74\xa7\xcc\xf3\x90\x73\xf8\xff\x86\xb8\x04\x6c\x87\x02\x79\x18\x4d\xe8\x04\xda\x13\x32\x26\x03\x0a\x7f\x17\xc7\x78\x51\x88\xb1\xc8\x2f\xde\x81\x39\x5b\x5c\x30\x0d\x7d\xb8\xda\x18\x72\x16\xfa\xa7\x97\x9f\x8b\x48\xf1\x29\x45\x1e\xec\xad\x22\xe7\xd4\x95\xe1\x25\x3e\xee\xad\x41\x42\xea\x0a\x48\x42\xdf\xdb\x5b\x80\x84\xd4\x15\xf0\xfa\xe2\xed\x3f\x03\x12\xa2\x10\xd0\x50\x1e\x57\x53\x1e\x73\x79\xb3\x14\xbf\xbf\x21\x17\xd3\x80\xc5\x7e\x84\x7e\x45\x4e\x97\x57\x16\xe4\x55\xb3\xce\xbc\x80\x45\x11\xc6\xcf\xd8\x5c\x8e\xcd\xd5\x2f\xf3\x7d\x20\xf9\x06\xf9\x37\xd7\x9e\xf5\xe2\x40\xc2\x0d\x7a\x63\x2e\x3c\xeb\xd3\x81\x84\x1b\xf4\xcd\x5c\x78\xd6\xc3\xfd\x84\xb7\x3a\x1d\x98\x23\xb0\x88\x27\x30\x67\xb1\x00\x91\x40\x8a\xb3\xe4\x5d\x7e\x16\x81\x97\x44\x6f\xb3\x98\x83\x08\x98\x80\x80\xbd\x23\xcc\x92\x14\xe5\xbf\x31\x5c\x9c\x83\x17\xb0\x14\x24\x4a\x04\x1c\x18\x87\x39\x9e\xa4\x08\x29\xf2\xf0\x67\x18\x3f\x43\x18\x83\x08\x10\x62\xfc\x10\xc0\x05\xea\x6e\x52\x63\x62\x5f\xd3\x9b\xf6\xfa\x87\x9d\xc2\x3f\xf2\x6e\x8e\x0b\x1b\x3f\xf6\xe4\x44\xbb\xa9\x8d\x20\x0b\xed\x69\x84\x57\x08\x75\x23\xbc\x42\xd6\x4c\x78\x32\x02\x85\x0f\x43\x0e\x4c\x5e\xfa\xce\xd2\xcc\xde\xdc\xc4\x6c\x3e\x53\x8c\x3d\xf4\x41\xb0\x6f\x11\xb6\xfa\x63\x4a\x5c\xa0\xfd\x7f\xc7\x3b\x97\x60\x58\x7c\x3f\x70\xc6\xf7\xb7\x76\xf1\x06\xf4\xf1\x8e\x2c\xe9\xed\x8b\xf3\xd3\xcb\xcf\x49\x4b\x13\x1b\x40\x65\xe6\x35\xc0\xc9\x4c\x6b\x80\x93\x99\xa5\xcf\x31\xee\x29\x83\x7c\xff\x0e\x7d\x98\x87\x22\x58\x16\x17\x63\xe8\xf6\x7a\x59\x73\xb9\x59\x1f\x57\x1b\xbe\xcc\x52\xb7\xd7\x33\x2d\x9f\xc1\xf8\x72\xd3\x0c\x06\x97\x6b\x65\x30\xb8\xdc\xa1\xf2\x60\xb3\xe4\xaf\x9f\x93\x36\x5c\xed\xf6\x7a\xc6\xc9\xaf\x87\x2a\x27\xbf\x1e\xa7\x9c\xfc\x7a\x9c\x72\xf2\x2b\x39\x7f\x66\xfb\xa8\xb3\x3d\x70\x49\x9f\x12\x18\xd9\x16\x79\xd8\x35\xdd\xd3\xd5\xf0\x69\xe8\x7f\x80\x63\xef\xf4\xa4\xd0\x9a\xcb\x0a\x64\x3e\xef\x0a\xe6\xd2\x1d\x4d\xa8\x74\x40\x41\xcc\x4c\xd2\xc4\x49\x23\x14\xb8\xcc\x2b\x4d\x9c\xf4\x43\x81\xcb\x2c\xdb\xc0\xb5\x26\x84\x02\x47\xce\xc3\x24\x9e\xa6\xf8\x1a\x85\x1e\x13\xd9\xdf\x49\x84\x70\x05\xf9\x47\x3a\x65\xb1\x2c\x18\x38\xf6\x84\xba\xfd\x91\x4d\x15\x06\x3f\xbd\xc0\xd0\x71\xc9\xe8\xda\x86\xff\xc8\x63\x51\x12\xb8\x64\x48\x5c\x62\x0f\xc8\x64\xe3\xf0\xd7\x96\xdf\x39\x36\xe4\xeb\xeb\xa0\x3f\x19\xf4\x2d\xa2\xd3\xbc\x0a\x5d\xe5\x94\x1c\x41\xd8\xa2\xc7\x15\xaa\xb6\x62\x76\x04\x49\x8b\x25\xa1\x42\xd2\x56\x54\x8f\x20\x69\xb1\xba\x54\x48\xda\x8a\x7b\x73\x92\x9a\x48\xfa\xfa\x89\xab\x24\xac\xf8\xe4\x5c\x52\x56\x7d\xbe\x6a\xaf\xcf\x57\x07\xab\xc2\xd7\x52\xae\xd7\x95\xaf\xa5\x59\xaf\x4c\x5f\x4b\xb3\x5e\xdb\x7e\x8b\x66\xd5\x0e\x65\x91\x61\xff\x7e\x4c\x17\x07\x99\xd5\x7b\x6b\x2b\x99\xc7\xca\x22\x5b\xae\x73\x67\xb2\x67\x69\x54\xac\x12\xb9\x6b\xbb\x51\x85\xbf\x12\x58\xda\x29\x54\xb1\xac\xa4\x95\x16\x79\x55\x60\x2a\x69\xa5\xf5\x59\x63\x65\xd5\x31\x64\x23\x84\x4d\x39\xa2\x0b\xd5\xb4\x44\x17\xa7\xe9\x89\x2e\x4e\xd3\x94\x2d\x5c\x33\xaf\x5b\xea\x9c\x83\x6a\xb2\xf4\x5f\xb8\x18\x9f\x84\x6a\x82\xf4\x5f\xb9\x34\x70\xf2\xa4\xe4\x81\xee\x79\xe2\x54\x20\x94\x27\x4d\xc5\x78\xe5\x09\x53\x31\x5e\x79\xb2\x5c\x8c\xff\x15\x00\x00\xff\xff\x02\xf7\x69\x7e\xa8\x1c\x00\x00")

func migrationsSqlPostgres8SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres8Sql,
		"migrations/sql/postgres/8.sql",
	)
}

func migrationsSqlPostgres8Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres8SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/8.sql", size: 7336, mode: os.FileMode(438), modTime: time.Unix(1542571539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTestsGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlTestsGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTestsGitkeep,
		"migrations/sql/tests/.gitkeep",
	)
}

func migrationsSqlTestsGitkeep() (*asset, error) {
	bytes, err := migrationsSqlTestsGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/.gitkeep", size: 0, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests1_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\xc1\x8e\xdb\x36\x10\x3d\xc7\x5f\x31\xc8\xc5\x5e\x94\x8e\x77\xb7\x48\x0e\xdb\x53\x81\xe6\x10\xa0\xd8\x00\xcd\xa6\x3d\x14\x05\x41\x93\x23\x89\x6b\x99\xa3\xce\x50\x71\xdc\x38\xff\x5e\x50\x94\x2c\x79\x63\x6c\x93\x53\xdb\xbd\x18\x9c\x21\x87\x9c\x79\xef\xcd\x58\xcb\x25\x7c\xb7\xf5\x25\x9b\x88\xf0\xbe\x99\xbd\xb9\x7d\xf7\xfa\x97\x3b\x78\x73\x7b\xf7\x16\xaa\xbd\x63\xa3\x6d\xed\x31\x44\x58\x78\xa7\xc0\xd4\x35\xed\xd0\x69\x4b\x2c\x9a\xd8\x97\x3e\x88\x82\x7c\x42\x07\xb3\xc5\xa3\x21\x68\x19\xa3\x02\x46\xe7\x19\x6d\xd4\x2d\x7b\x51\x50\xb2\x09\x51\xc7\x7d\x83\x92\xf6\xa4\xa1\x20\x38\xd8\x62\xa9\x41\x05\xb4\x0b\xc8\x0a\x1a\xaa\xbd\xdd\xa7\x38\x05\x91\x24\x2f\xfa\xdb\xbb\x75\x4d\x25\xf5\x5e\x0a\xd1\xd8\x28\x0f\x5e\xd7\xf8\xb1\xf1\x8c\xa2\x4d\x54\x20\x68\x23\xb1\xf6\x0e\x43\xf4\x85\x47\xce\xa1\xf7\xbb\x8d\xe4\xdf\xe1\xa5\x0d\x06\x8d\xc1\x35\xe4\x43\xd4\xa6\x8d\x95\xde\x62\xac\xc8\xa5\x7c\xff\x6c\x51\x86\x52\x06\x8b\xd6\xf7\xa9\x3e\xf1\x65\xf0\xa1\xd4\xa6\x2e\x15\xb4\x82\xec\x43\x41\x9d\x17\x9d\x3e\x56\xda\xed\x4a\x9b\x43\x52\xd9\x0a\x4c\xeb\x3c\x06\x8b\x17\xb3\x5f\x7f\xfc\xf9\xfd\xeb\x77\x33\x80\xc5\xfc\x6a\x99\x2b\x99\x2b\x98\x57\x31\x36\x37\xab\x55\x4d\xd6\xd4\x15\x49\x3c\xf4\x8e\x92\xa8\xac\x31\x9d\x10\xda\xe2\x24\xc0\xac\xad\xc3\xe2\xeb\x42\x53\x81\xc4\xfe\x2f\xd4\x96\x1c\x1e\xfc\xb6\xa9\xbd\xf5\xdd\x35\x1d\x14\x07\xef\x74\xb7\x48\x9e\x82\xe8\xb0\x36\xdc\xc5\x61\x40\x23\x93\x37\x32\x5d\x13\x47\xa4\xe9\xf6\x99\x72\x4a\x1a\x2f\x3a\x14\x94\xac\xcb\x71\x3f\xf3\x95\x4e\x7c\x7a\xbe\xc1\xbd\x3c\xbf\x81\xdf\xff\xf8\x3c\xb9\x20\x71\x96\xcc\x40\x01\x27\xee\x96\xfd\xd5\x61\x5c\x5f\xa7\x2d\x96\xeb\x97\xaf\xf2\xe2\xe5\x75\xb7\x68\xda\x75\xed\xed\x10\x26\x37\xab\xd5\x6e\xb7\x7b\x41\xbc\x7f\x21\xd5\xca\x34\x7e\x7e\xf1\xc3\x6c\xda\x0b\xb3\x67\xb9\x19\x28\xe1\x75\xdd\xc9\x22\xe9\xc8\x9a\xe8\x29\x68\x41\x11\x4f\xa1\xef\x91\x71\x0f\x5d\x96\x5e\xe6\xfb\x48\xf0\xb3\xc4\x6f\x4d\xa5\x0f\xcb\x3e\x72\xe9\xdd\x5c\xc1\xed\xdb\xdf\x16\x17\x0a\xe6\x57\x4b\x69\xd7\xdf\x96\x41\x2f\x46\x58\xd8\xca\xd4\x35\x86\x12\x15\x7c\x40\xee\x84\x7e\xec\x8a\x94\x5d\x9f\xcb\x54\xcc\xb5\x02\xd9\xf8\xe6\xe8\x42\xa7\xfb\x4e\xb4\xc2\xc5\xb9\x82\xc6\x83\xc9\x22\xef\xac\x4e\x2d\x88\x1f\x63\xd7\x95\xfe\x88\x48\xf7\xe4\xf4\xb4\xfe\x42\xed\x1d\x18\xfd\x91\x79\x57\xfc\x90\x77\xb6\x46\xe1\x74\xb0\xa4\xe4\xb3\x31\x4c\x96\xb9\x82\xc2\xd4\x82\xf9\x44\x4a\xbc\x0f\x14\x2e\x46\x50\x07\x6c\x3f\x7d\xce\xbb\x67\xe0\x9f\x5f\x2d\x4d\xeb\xfe\x01\x77\x9b\xda\x38\xc4\xff\x10\xe0\x05\xb1\x4d\x37\xf4\x43\x65\x1c\x70\xe7\xb8\xc8\x9e\x49\xce\x67\xc9\x51\x60\x2c\xff\xdb\x0c\xe5\xba\xba\x56\x78\x84\xb1\x93\xbc\x12\x7d\x79\x61\xf9\xdb\x78\xd4\x95\x09\xae\x46\x77\xc2\x67\xf7\x67\x35\x92\xc3\xb8\xc5\xed\x3a\xe1\x3a\xac\x74\x41\xac\x00\x99\x89\x1f\x72\x34\x80\x6e\xac\x45\x91\x3c\x42\x47\xef\x30\x54\xcf\x71\xbd\x33\xa2\x5b\x41\x37\xbe\xff\x75\x6d\x33\x00\x1b\xb9\x45\x05\xdf\xbf\xba\xbc\x1c\xc0\x3c\x45\x76\xea\x1a\x69\x19\x94\xbf\x5c\xc2\x5d\x85\xd0\x30\x7e\xf0\xd4\x0a\xac\x6b\xb2\x1b\xf0\x02\xf7\xad\x44\x88\x04\x25\xc6\x24\x39\xf4\x65\x80\x34\x97\x61\x47\xbc\xf1\xa1\x7c\x74\x58\x75\x20\xc0\x22\xfd\x1b\x9a\xd8\xf2\xa8\xbb\x2f\x06\xc4\x69\xef\x64\xe0\x1f\xf0\x50\x10\x6f\xb5\x33\xd1\x8c\x78\x26\xeb\x14\x1a\xf1\xe5\x43\x81\x8c\xe3\xf5\x44\xb1\xa3\x1e\xfb\x77\x46\x57\x0f\xd7\xe3\x4a\x62\x2c\x18\xa5\x7a\xa2\xd5\xa5\xaf\x82\x27\x5a\x5a\x1a\xa3\xff\xeb\xd2\xa6\x9f\xee\x3f\xd1\x2e\xcc\xfe\x0e\x00\x00\xff\xff\xf8\x79\x87\x60\xcc\x0b\x00\x00")

func migrationsSqlTests1_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests1_testSql,
		"migrations/sql/tests/1_test.sql",
	)
}

func migrationsSqlTests1_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests1_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/1_test.sql", size: 3020, mode: os.FileMode(438), modTime: time.Unix(1542561049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests2_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x57\xc1\x8e\xdb\x36\x10\x3d\xc7\x5f\x31\xc8\x45\xbb\x28\x9d\xdd\xba\x48\x0e\xdb\x53\x81\xe6\x10\xa0\xd8\x00\xcd\xa6\x3d\x14\x05\x41\x93\x23\x89\x6b\x99\xa3\xce\x50\x71\xdc\x38\xff\x5e\x50\x94\x2c\x79\x63\x6c\x93\x53\x8b\xe4\xb2\xe0\x0c\x39\xe4\xcc\x7b\x6f\x46\xeb\xe5\x12\xbe\xdb\xfa\x8a\x4d\x44\x78\xdb\x2e\x5e\xdd\xbe\x79\xf9\xeb\x1d\xbc\xba\xbd\x7b\x0d\xf5\xde\xb1\xd1\xb6\xf1\x18\x22\x5c\x78\xa7\xc0\x34\x0d\xed\xd0\x69\x4b\x2c\x9a\xd8\x57\x3e\x88\x82\x7c\x42\x07\xb3\xc5\xa3\x21\x68\x19\xa3\x02\x46\xe7\x19\x6d\xd4\x1d\x7b\x51\x50\xb1\x09\x51\xc7\x7d\x8b\x92\xf6\xa4\xa5\x20\x38\xda\x62\xa9\x45\x05\xb4\x0b\xc8\x0a\x5a\x6a\xbc\xdd\xa7\x38\x05\x91\x24\x2f\x86\xdb\xfb\x75\x43\x15\x0d\x5e\x0a\xd1\xd8\x28\x0f\x5e\xd7\xf8\xbe\xf5\x8c\xa2\x4d\x54\x20\x68\x23\xb1\xf6\x0e\x43\xf4\xa5\x47\xce\xa1\xf7\xbb\x8d\xe4\xbf\xe3\x4b\x1b\x0c\x1a\x83\x6b\xc9\x87\xa8\x4d\x17\x6b\xbd\xc5\x58\x93\x4b\xf9\xfe\xd5\xa1\x8c\xa5\x8c\x16\xad\xef\x53\x7d\xe2\xab\xe0\x43\xa5\x4d\x53\x29\xe8\x04\xd9\x87\x92\x7a\x2f\x3a\x7d\xac\xb4\xdf\x95\x2e\x87\xa4\xb2\x15\x98\xce\x79\x0c\x16\x2f\x17\xbf\xfd\xf4\xcb\xdb\x97\x6f\x16\x00\x17\xc5\x6a\x99\x2b\x29\x14\x14\x75\x8c\xed\xcd\xd5\x55\x43\xd6\x34\x35\x49\x3c\x0c\x8e\x8a\xa8\x6a\x30\x9d\x10\xda\xe2\x2c\xc0\xac\xad\xc3\xf2\xf3\x42\x53\x81\xc4\xfe\x6f\xd4\x96\x1c\x1e\xfc\xb6\x6d\xbc\xf5\xfd\x35\x3d\x14\x07\xef\x74\xbf\x48\x9e\x92\xe8\xb0\x36\xdc\xc7\x61\x40\x23\xb3\x37\x32\x5d\x33\x47\xa4\xf9\xf6\x99\x72\x2a\x9a\x2e\x3a\x94\x94\xac\xeb\x69\x3f\xf3\x95\x4e\x7c\x78\xba\xc1\xbd\x3c\xbd\x81\x3f\xfe\xfc\x38\xbb\x20\x71\x96\xcc\x40\x01\x67\xee\x8e\xfd\xf7\x87\x69\xbd\x4a\x5b\x2c\xab\xe7\x2f\xf2\xe2\xf9\xaa\x5f\xb4\xdd\xba\xf1\x76\x0c\x93\x9b\xab\xab\xdd\x6e\xf7\x8c\x78\xff\x4c\xea\x2b\xd3\xfa\xe2\xf2\xc7\xc5\xbc\x17\x16\x4f\x72\x33\x50\xc2\x6b\xd5\xcb\x22\xe9\xc8\x9a\xe8\x29\x68\x41\x11\x4f\x61\xe8\x91\x69\x0f\x5d\x96\x5e\xe6\xfb\x48\xf0\x93\xc4\x6f\x43\x95\x0f\xcb\x21\x72\xe9\x5d\xa1\xe0\xf6\xf5\xef\x17\x97\x0a\x8a\xd5\x52\xba\xf5\x97\x65\x30\x88\x11\x2e\x6c\x6d\x9a\x06\x43\x85\x0a\xde\x21\xf7\x42\x3f\x76\x45\xca\x6e\xc8\x65\x2e\xe6\x46\x81\x6c\x7c\x7b\x74\xa1\xd3\x43\x27\x5a\xe1\xf2\x5c\x41\xd3\xc1\x64\x91\x77\x56\xa7\x16\xc4\xf7\xb1\xef\x4a\x7f\x44\xa4\x7f\x72\x7e\x5a\x7f\xa2\xf6\x1e\x8c\xe1\x48\xd1\x17\x3f\xe6\x9d\xad\x49\x38\x3d\x2c\x29\xf9\x6c\x8c\x93\xa5\x50\x50\x9a\x46\x30\x9f\x48\x89\x0f\x81\xc2\xe5\x04\xea\x88\xed\x87\x8f\x79\xf7\x0c\xfc\xc5\x6a\x69\x3a\xf7\x2f\xb8\xdb\xd4\xc6\x21\xfe\x8f\x00\x2f\x89\x6d\xba\x61\x18\x2a\xd3\x80\x3b\xc7\x45\xf6\xcc\x72\x3e\x4b\x8e\x02\x63\xf9\xbf\x66\x28\xd7\xd5\xb7\xc2\x23\x8c\x9d\xe4\x95\xe8\xcb\x0b\xcb\x5f\xc6\xa3\xae\x4d\x70\x0d\xba\x13\x3e\xfb\x8f\xd5\x44\x0e\xe3\x16\xb7\xeb\x84\xeb\xb8\xd2\x25\xb1\x02\x64\x26\x7e\xc8\xd1\x08\xba\xb1\x16\x45\xf2\x08\x9d\xbc\xe3\x50\x3d\xc7\xf5\xce\x88\xee\x04\xdd\xf4\xfe\xe7\xb5\xcd\x08\x6c\xe4\x0e\x15\xfc\xf0\xe2\xfa\x7a\x04\xf3\x14\xd9\xb9\x6b\xa2\x65\x54\xfe\x72\x09\x77\x35\x42\xcb\xf8\xce\x53\x27\xb0\x6e\xc8\x6e\xc0\x0b\xdc\x77\x12\x21\x12\x54\x18\x93\xe4\xd0\x57\x01\xd2\x5c\x86\x1d\xf1\xc6\x87\xea\xd1\x61\xd5\x83\x00\x17\xe9\x6b\x68\x62\xc7\x93\xee\x3e\x19\x10\xa7\xbd\x93\x81\x7f\xc0\x43\x49\xbc\xd5\xce\x44\x33\xe1\x39\x58\xe7\xe6\xac\xf8\xea\xa1\x52\xa6\x39\x7b\x22\xdd\x49\x98\xc3\x83\x93\xab\x98\xe9\x72\x94\xf8\xe3\xfa\x62\x2c\x19\xa5\xfe\xa6\x6a\x4e\xff\x41\x7c\x53\x05\xa7\x41\xfc\x15\x16\x3c\xff\x49\xf0\x33\xed\xc2\xe2\x9f\x00\x00\x00\xff\xff\xb2\x22\x45\xc0\x24\x0c\x00\x00")

func migrationsSqlTests2_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests2_testSql,
		"migrations/sql/tests/2_test.sql",
	)
}

func migrationsSqlTests2_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests2_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/2_test.sql", size: 3108, mode: os.FileMode(438), modTime: time.Unix(1542561049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests3_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x57\xc1\x6e\xdc\x36\x10\x3d\x67\xbf\x62\x90\x8b\x6c\x94\x1b\xbb\x36\x92\x83\x7b\x2a\xd0\x1c\x02\x14\x0e\xd0\x38\xed\xa1\x28\x08\x2e\x39\x92\xe8\xd5\x72\xd4\x19\x2a\x9b\x6d\x36\xff\x5e\x50\x94\x56\x5a\x67\xe1\x26\xa7\x16\xf5\xc5\xe0\x0c\x39\xe4\xcc\x7b\x6f\x46\xde\xe5\x12\xbe\xdb\xf8\x8a\x4d\x44\x78\xdf\x2e\xde\xdc\xbe\x7b\xfd\xcb\x1d\xbc\xb9\xbd\x7b\x0b\xf5\xce\xb1\xd1\xb6\xf1\x18\x22\x9c\x79\xa7\xc0\x34\x0d\x6d\xd1\x69\x4b\x2c\x9a\xd8\x57\x3e\x88\x82\x7c\x42\x07\xb3\xc1\x83\x21\x68\x19\xa3\x02\x46\xe7\x19\x6d\xd4\x1d\x7b\x51\x50\xb1\x09\x51\xc7\x5d\x8b\x92\xf6\xa4\xa5\x20\x38\xda\x62\xa9\x45\x05\xb4\x0d\xc8\x0a\x5a\x6a\xbc\xdd\xa5\x38\x05\x91\x24\x2f\x86\xdb\xfb\x75\x43\x15\x0d\x5e\x0a\xd1\xd8\x28\x0f\x5e\xd7\xf8\xb1\xf5\x8c\xa2\x4d\x54\x20\x68\x23\xb1\xf6\x0e\x43\xf4\xa5\x47\xce\xa1\xf7\xdb\xb5\xe4\xbf\xe3\x4b\x6b\x0c\x1a\x83\x6b\xc9\x87\xa8\x4d\x17\x6b\xbd\xc1\x58\x93\x4b\xf9\xfe\xd9\xa1\x8c\xa5\x8c\x16\xad\xee\x53\x7d\xe2\xab\xe0\x43\xa5\x4d\x53\x29\xe8\x04\xd9\x87\x92\x7a\x2f\x3a\x7d\xa8\xb4\xdf\x95\x2e\x87\xa4\xb2\x15\x98\xce\x79\x0c\x16\xcf\x17\xbf\xfe\xf8\xf3\xfb\xd7\xef\x16\x00\x67\xc5\xf5\x32\x57\x52\x28\x28\xea\x18\xdb\x9b\x8b\x8b\x86\xac\x69\x6a\x92\xb8\x1f\x1c\x15\x51\xd5\x60\x3a\x21\xb4\xc1\x59\x80\x59\x59\x87\xe5\xd7\x85\xa6\x02\x89\xfd\x5f\xa8\x2d\x39\xdc\xfb\x4d\xdb\x78\xeb\xfb\x6b\x7a\x28\xf6\xde\xe9\x7e\x91\x3c\x25\xd1\x7e\x65\xb8\x8f\xc3\x80\x46\x66\x6f\x64\xba\x66\x8e\x48\xf3\xed\x13\xe5\x54\x34\x5d\xb4\x2f\x29\x59\x97\xd3\x7e\xe6\x2b\x9d\xf8\xf4\x7c\x8d\x3b\x79\x7e\x03\xbf\xff\xf1\x79\x76\x41\xe2\x2c\x99\x81\x02\xce\xdc\x1d\xfb\xef\xf7\xd3\xfa\x2a\x6d\xb1\x5c\xbd\x7c\x95\x17\x2f\xaf\xfa\x45\xdb\xad\x1a\x6f\xc7\x30\xb9\xb9\xb8\xd8\x6e\xb7\x2f\x88\x77\x2f\xa4\xbe\x30\xad\x2f\xce\x7f\x58\xcc\x7b\x61\xf1\x2c\x37\x03\x25\xbc\xae\x7a\x59\x24\x1d\x59\x13\x3d\x05\x2d\x28\xe2\x29\x0c\x3d\x32\xed\xa1\xcb\xd2\xcb\x7c\x1f\x08\x7e\x96\xf8\x6d\xa8\xf2\x61\x39\x44\x2e\xbd\x2b\x14\xdc\xbe\xfd\xed\xec\x5c\x41\x71\xbd\x94\x6e\xf5\x6d\x19\x0c\x62\x84\x33\x5b\x9b\xa6\xc1\x50\xa1\x82\x0f\xc8\xbd\xd0\x0f\x5d\x91\xb2\x1b\x72\x99\x8b\xb9\x51\x20\x6b\xdf\x1e\x5c\xe8\xf4\xd0\x89\x56\xb8\x3c\x55\xd0\x74\x30\x59\xe4\x9d\xd5\xa9\x05\xf1\x63\xec\xbb\xd2\x1f\x10\xe9\x9f\x9c\x9f\xd6\x5f\xa8\xbd\x07\x63\x38\x52\xf4\xc5\x8f\x79\x67\x6b\x12\x4e\x0f\x4b\x4a\x3e\x1b\xe3\x64\x29\x14\x94\xa6\x11\xcc\x27\x52\xe2\x43\xa0\x70\x39\x81\x3a\x62\xfb\xe9\x73\xde\x3d\x01\x7f\x71\xbd\x34\x9d\xfb\x07\xdc\x6d\x6a\xe3\x10\xff\x43\x80\x97\xc4\x36\xdd\x30\x0c\x95\x69\xc0\x9d\xe2\x22\x7b\x66\x39\x9f\x24\x47\x81\xb1\xfc\x6f\x33\x94\xeb\xea\x5b\xe1\x11\xc6\x8e\xf2\x4a\xf4\xe5\x85\xe5\x6f\xe3\x51\xd7\x26\xb8\x06\xdd\x11\x9f\xfd\xc7\x6a\x22\x87\x71\x83\x9b\x55\xc2\x75\x5c\xe9\x92\x58\x01\x32\x13\x3f\xe4\x68\x04\xdd\x58\x8b\x22\x79\x84\x4e\xde\x71\xa8\x9e\xe2\x7a\x6b\x44\x77\x82\x6e\x7a\xff\xeb\xda\x66\x04\x36\x72\x87\x0a\xae\x5f\x5d\x5e\x8e\x60\x1e\x23\x3b\x77\x4d\xb4\x8c\xca\x5f\x2e\xe1\xae\x46\x68\x19\x3f\x78\xea\x04\x56\x0d\xd9\x35\x78\x81\xfb\x4e\x22\x44\x82\x0a\x63\x92\x1c\xfa\x2a\x40\x9a\xcb\xb0\x25\x5e\xfb\x50\x3d\x3a\xac\x7a\x10\xe0\x2c\x7d\x0d\x4d\xec\x78\xd2\xdd\x17\x03\xe2\xb8\x77\x32\xf0\x0f\x78\x28\x89\x37\xda\x99\x68\x26\x3c\x07\xeb\xd4\x9c\x15\x5f\x3d\x54\xca\x34\x67\x8f\xa4\x3b\x09\x73\x78\x70\x72\x15\x33\x5d\x8e\x12\x7f\x5c\x5f\x8c\x25\xa3\xd4\x4f\xaa\xe6\xf4\x1f\xc4\x93\x2a\x38\x0d\xe2\x27\x55\x70\xbb\xb6\xff\x47\x86\xe7\xbf\x81\x7e\xa2\x6d\x58\xfc\x1d\x00\x00\xff\xff\xe3\x86\x40\x1e\x15\x0d\x00\x00")

func migrationsSqlTests3_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests3_testSql,
		"migrations/sql/tests/3_test.sql",
	)
}

func migrationsSqlTests3_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests3_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/3_test.sql", size: 3349, mode: os.FileMode(438), modTime: time.Unix(1542561049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests4_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x57\x51\x6f\xdb\x36\x10\x7e\xae\x7f\xc5\xa1\x2f\x72\x30\xb9\xce\xb2\xb4\x0f\xd9\xd3\x80\xf5\xa1\xc0\x90\x02\x6b\xba\x3d\x0c\x03\x41\x93\x27\xe9\x62\x99\xa7\xf1\xa8\xb8\x5e\xdd\xff\x3e\x50\x94\x2c\xd9\x35\xb2\xf6\x69\x43\xf3\x12\xf0\x8e\x3c\xf2\xee\xfb\xbe\x3b\xc5\x8b\x05\x7c\xb7\xa1\xd2\xeb\x80\xf0\xbe\x99\xbd\xb9\x7d\xf7\xfa\xd7\x3b\x78\x73\x7b\xf7\x16\xaa\x9d\xf5\x5a\x99\x9a\xd0\x05\x98\x93\xcd\x41\xd7\x35\x6f\xd1\x2a\xc3\x5e\x14\x7b\x2a\xc9\x49\x0e\xe9\x84\x72\x7a\x83\x07\x43\xd0\x78\x0c\x39\x78\xb4\xe4\xd1\x04\xd5\x7a\x92\x1c\x4a\xaf\x5d\x50\x61\xd7\xa0\xc4\x3d\x69\xd8\x09\x0e\xb6\x18\x6e\x30\x07\xde\x3a\xf4\x39\x34\x5c\x93\xd9\xc5\xb8\x1c\x02\x4b\x5a\xf4\xb7\x77\xeb\x9a\x4b\xee\xbd\xec\x82\x36\x41\x4e\x5e\x57\xf8\xa1\x21\x8f\xa2\x74\xc8\x41\xd0\x04\xf6\x8a\x2c\xba\x40\x05\xa1\x4f\xa1\xf7\xdb\xb5\xa4\xbf\xc3\x4b\x6b\x74\x0a\x9d\x6d\x98\x5c\x50\xba\x0d\x95\xda\x60\xa8\xd8\xc6\x7c\xff\x6a\x51\x86\x52\x06\x8b\x57\xf7\xb1\x3e\xa1\xd2\x91\x2b\x95\xae\xcb\x1c\x5a\x41\x4f\xae\xe0\xce\x8b\x56\x1d\x2a\xed\x76\xa5\x4d\x21\xb1\xec\x1c\x74\x6b\x09\x9d\xc1\x8b\xd9\x6f\x3f\xfd\xf2\xfe\xf5\xbb\x19\xc0\x3c\xbb\x5e\xa4\x4a\xb2\x1c\xb2\x2a\x84\xe6\x66\xb9\xac\xd9\xe8\xba\x62\x09\xfb\xde\x51\x32\x97\x35\xc6\x13\xc2\x1b\x9c\x04\xe8\x95\xb1\x58\x7c\x59\x68\x2c\x90\x3d\xfd\x8d\xca\xb0\xc5\x3d\x6d\x9a\x9a\x0c\x75\xd7\x74\x50\xec\xc9\xaa\x6e\x11\x3d\x05\xf3\x7e\xa5\x7d\x17\x87\x0e\xb5\x4c\xde\x48\x74\x4d\x1c\x81\xa7\xdb\x67\xca\x29\x79\xbc\x68\x5f\x70\xb4\x2e\xc7\xfd\xc4\x57\x3c\xf1\xf1\xf9\x1a\x77\xf2\xfc\x06\xfe\xf8\xf3\xd3\xe4\x82\xc8\x59\x34\x1d\x3b\x9c\xb8\x5b\x4f\xdf\xef\xc7\xf5\x55\xdc\xf2\x72\xf5\xf2\x55\x5a\xbc\xbc\xea\x16\x4d\xbb\xaa\xc9\x0c\x61\x72\xb3\x5c\x6e\xb7\xdb\x17\xec\x77\x2f\xa4\x5a\xea\x86\xb2\x8b\x1f\x67\xd3\x5e\x98\x3d\x4b\xcd\xc0\x11\xaf\xab\x4e\x16\x51\x47\x46\x07\x62\xa7\x04\x45\x88\x5d\xdf\x23\xe3\x1e\xda\x24\xbd\xc4\xf7\x81\xe0\x67\x91\xdf\x9a\x4b\x72\x8b\x3e\x72\x41\x36\xcb\xe1\xf6\xed\xef\xf3\x8b\x1c\xb2\xeb\x85\xb4\xab\xaf\xcb\xa0\x17\x23\xcc\x4d\xa5\xeb\x1a\x5d\x89\x39\x3c\xa0\xef\x84\x7e\xe8\x8a\x98\x5d\x9f\xcb\x54\xcc\x75\x0e\xb2\xa6\xe6\xe0\x42\xab\xfa\x4e\x34\xe2\x8b\x73\x05\x8d\x07\xa3\xc5\x64\x8d\x8a\x2d\x88\x1f\x42\xd7\x95\x74\x40\xa4\x7b\x72\x7a\x5a\x7d\xa6\xf6\x0e\x8c\xfe\x48\xd6\x15\x3f\xe4\x9d\xac\x51\x38\x1d\x2c\x31\xf9\x64\x0c\x93\x25\xcb\xa1\xd0\xb5\x60\x3a\x11\x13\xef\x03\xc5\x17\x23\xa8\x03\xb6\x1f\x3f\xa5\xdd\x33\xf0\x67\xd7\x0b\xdd\xda\x7f\xc1\xdd\xc4\x36\x76\xe1\x7f\x04\x78\xc1\xde\xc4\x1b\xfa\xa1\x32\x0e\xb8\x73\x5c\x24\xcf\x24\xe7\xb3\xe4\xe4\xa0\x8d\xff\xaf\x19\x4a\x75\x75\xad\xf0\x08\x63\x47\x79\x45\xfa\xd2\xc2\xf8\xaf\xe3\x51\x55\xda\xd9\x1a\xed\x11\x9f\xdd\xc7\x6a\x24\xc7\xe3\x06\x37\xab\x88\xeb\xb0\x52\x05\xfb\x1c\xd0\x7b\xf6\xa7\x1c\x0d\xa0\x6b\x63\x50\x24\x8d\xd0\xd1\x3b\x0c\xd5\x73\x5c\x6f\xb5\xa8\x56\xd0\x8e\xef\x7f\x59\xdb\x0c\xc0\x06\xdf\x62\x0e\x3f\xbc\xba\xbc\x1c\xc0\x3c\x46\x76\xea\x1a\x69\x19\x94\xbf\x58\xc0\x5d\x85\xd0\x78\x7c\x20\x6e\x05\x56\x35\x9b\x35\x90\xc0\x7d\x2b\x01\x02\x43\x89\x21\x4a\x0e\xa9\x74\x10\xe7\x32\x6c\xd9\xaf\xc9\x95\x8f\x0e\xab\x0e\x04\x98\xc7\xaf\xa1\x0e\xad\x1f\x75\xf7\xd9\x80\x38\xee\x9d\x04\xfc\x09\x0f\x05\xfb\x8d\xb2\x3a\xe8\x11\xcf\xde\x1a\x5a\x4d\x9b\x40\x0f\x27\x58\x09\x95\xa7\x8a\x19\xe7\xed\x91\x84\x47\x81\xf6\x0f\x8f\xae\x6c\xa2\xcf\x51\xea\x11\xf1\xc7\xd5\xe6\xb1\xf0\x28\xd5\x13\x46\x20\xfe\x77\xf1\x84\xcb\x8f\x23\xfb\x09\x97\xdf\xac\xcd\xb7\xcf\xfe\xf4\x97\xd4\xcf\xbc\x75\xb3\x7f\x02\x00\x00\xff\xff\x6a\x18\x8e\x57\x5b\x0d\x00\x00")

func migrationsSqlTests4_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests4_testSql,
		"migrations/sql/tests/4_test.sql",
	)
}

func migrationsSqlTests4_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests4_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/4_test.sql", size: 3419, mode: os.FileMode(438), modTime: time.Unix(1542561049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests5_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x57\x41\x8f\xdb\x36\x13\x3d\xc7\xbf\x62\x90\x8b\xbc\xf8\xe4\x78\xbf\x2d\x9c\xc3\xf6\x54\xa0\x39\x04\x28\x36\x40\xb3\x69\x0f\x45\x41\xd0\xe4\x48\x9a\xb5\xcc\x51\x39\xd4\x3a\x6e\x9c\xff\x5e\x50\x94\x2c\xd9\x31\xb6\xc9\xa9\x45\xf7\xb2\xe0\x0c\x39\xe4\xcc\x7b\x6f\x46\xeb\xc5\x02\xfe\xb7\xa5\xd2\xeb\x80\xf0\xa1\x99\xbd\xbd\x7b\xff\xe6\xe7\x7b\x78\x7b\x77\xff\x0e\xaa\xbd\xf5\x5a\x99\x9a\xd0\x05\x98\x93\xcd\x41\xd7\x35\xef\xd0\x2a\xc3\x5e\x14\x7b\x2a\xc9\x49\x0e\xe9\x84\x72\x7a\x8b\x47\x43\xd0\x78\x0c\x39\x78\xb4\xe4\xd1\x04\xd5\x7a\x92\x1c\x4a\xaf\x5d\x50\x61\xdf\xa0\xc4\x3d\x69\xd8\x09\x0e\xb6\x18\x6e\x30\x07\xde\x39\xf4\x39\x34\x5c\x93\xd9\xc7\xb8\x1c\x02\x4b\x5a\xf4\xb7\x77\xeb\x9a\x4b\xee\xbd\xec\x82\x36\x41\xce\x5e\x57\xf8\xb1\x21\x8f\xa2\x74\xc8\x41\xd0\x04\xf6\x8a\x2c\xba\x40\x05\xa1\x4f\xa1\x0f\xbb\x8d\xa4\xbf\xc3\x4b\x1b\x74\x0a\x9d\x6d\x98\x5c\x50\xba\x0d\x95\xda\x62\xa8\xd8\xc6\x7c\xff\x68\x51\x86\x52\x06\x8b\xd7\x0f\xb1\x3e\xa1\xd2\x91\x2b\x95\xae\xcb\x1c\x5a\x41\x4f\xae\xe0\xce\x8b\x56\x1d\x2b\xed\x76\xa5\x4d\x21\xb1\xec\x1c\x74\x6b\x09\x9d\xc1\xab\xd9\x2f\x3f\xfc\xf4\xe1\xcd\xfb\x19\xc0\x3c\x5b\x2d\x52\x25\x59\x0e\x59\x15\x42\x73\xbb\x5c\xd6\x6c\x74\x5d\xb1\x84\x43\xef\x28\x99\xcb\x1a\xe3\x09\xe1\x2d\x4e\x02\xf4\xda\x58\x2c\xbe\x2e\x34\x16\xc8\x9e\xfe\x44\x65\xd8\xe2\x81\xb6\x4d\x4d\x86\xba\x6b\x3a\x28\x0e\x64\x55\xb7\x88\x9e\x82\xf9\xb0\xd6\xbe\x8b\x43\x87\x5a\x26\x6f\x24\xba\x26\x8e\xc0\xd3\xed\x0b\xe5\x94\x3c\x5e\x74\x28\x38\x5a\xd7\xe3\x7e\xe2\x2b\x9e\xf8\xf4\x72\x83\x7b\x79\x79\x0b\xbf\xfd\xfe\x79\x72\x41\xe4\x2c\x9a\x8e\x1d\x4e\xdc\xad\xa7\xff\x1f\xc6\xf5\x4d\xdc\xf2\x72\xb3\x7a\x9d\x16\xab\x9b\x6e\xd1\xb4\xeb\x9a\xcc\x10\x26\xb7\xcb\xe5\x6e\xb7\x7b\xc5\x7e\xff\x4a\xaa\xa5\x6e\x28\xbb\xfa\x7e\x36\xed\x85\xd9\x8b\xd4\x0c\x1c\xf1\xba\xe9\x64\x11\x75\x64\x74\x20\x76\x4a\x50\x84\xd8\xf5\x3d\x32\xee\xa1\x4d\xd2\x4b\x7c\x1f\x09\x7e\x11\xf9\xad\xb9\x24\xb7\xe8\x23\x17\x64\xb3\x1c\xee\xde\xfd\x3a\xbf\xca\x21\x5b\x2d\xa4\x5d\x7f\x5b\x06\xbd\x18\x61\x6e\x2a\x5d\xd7\xe8\x4a\xcc\xe1\x11\x7d\x27\xf4\x63\x57\xc4\xec\xfa\x5c\xa6\x62\xae\x73\x90\x0d\x35\x47\x17\x5a\xd5\x77\xa2\x11\x5f\x5c\x2a\x68\x3c\x18\x2d\x26\x6b\x54\x6c\x41\xfc\x18\xba\xae\xa4\x23\x22\xdd\x93\xd3\xd3\xea\x0b\xb5\x77\x60\xf4\x47\xb2\xae\xf8\x21\xef\x64\x8d\xc2\xe9\x60\x89\xc9\x27\x63\x98\x2c\x59\x0e\x85\xae\x05\xd3\x89\x98\x78\x1f\x28\xbe\x18\x41\x1d\xb0\xfd\xf4\x39\xed\x5e\x80\x3f\x5b\x2d\x74\x6b\xff\x06\x77\x13\xdb\xd8\x85\x7f\x11\xe0\x05\x7b\x13\x6f\xe8\x87\xca\x38\xe0\x2e\x71\x91\x3c\x93\x9c\x2f\x92\x93\x83\x36\xfe\x9f\x66\x28\xd5\xd5\xb5\xc2\x13\x8c\x9d\xe4\x15\xe9\x4b\x0b\xe3\xbf\x8d\x47\x55\x69\x67\x6b\xb4\x27\x7c\x76\x1f\xab\x91\x1c\x8f\x5b\xdc\xae\x23\xae\xc3\x4a\x15\xec\x73\x40\xef\xd9\x9f\x73\x34\x80\xae\x8d\x41\x91\x34\x42\x47\xef\x30\x54\x2f\x71\xbd\xd3\xa2\x5a\x41\x3b\xbe\xff\x75\x6d\x33\x00\x1b\x7c\x8b\x39\x7c\xf7\xfa\xfa\x7a\x00\xf3\x14\xd9\xa9\x6b\xa4\x65\x50\xfe\x62\x01\xf7\x15\x42\xe3\xf1\x91\xb8\x15\x58\xd7\x6c\x36\x40\x02\x0f\xad\x04\x08\x0c\x25\x86\x28\x39\xa4\xd2\x41\x9c\xcb\xb0\x63\xbf\x21\x57\x3e\x39\xac\x3a\x10\x60\x1e\xbf\x86\x3a\xb4\x7e\xd4\xdd\x17\x03\xe2\xb4\x77\x12\xf0\x67\x3c\x14\xec\xb7\xca\xea\xa0\x47\x3c\x7b\x6b\x68\x35\x6d\x02\x3d\x9e\x61\x25\x54\x9e\x2b\x66\x9c\xb7\x27\x12\x1e\x05\xda\x3f\x3c\xba\xb2\x89\x3e\x47\xa9\x47\xc4\x9f\x56\x9b\xc7\xc2\xa3\x54\xcf\x18\x81\xf8\xdf\xc5\x33\x2e\x3f\x8e\xec\x67\x5c\x7e\xb3\x31\xff\x7d\xf6\xa7\xbf\xa4\x7e\xe4\x9d\x9b\xfd\x15\x00\x00\xff\xff\xba\x71\xd2\x91\x5b\x0d\x00\x00")

func migrationsSqlTests5_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests5_testSql,
		"migrations/sql/tests/5_test.sql",
	)
}

func migrationsSqlTests5_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests5_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/5_test.sql", size: 3419, mode: os.FileMode(438), modTime: time.Unix(1542561049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests6_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x57\x41\x8f\xdb\x36\x13\x3d\xc7\xbf\x62\x90\x8b\xbc\xf8\xe4\x78\xbf\x2d\xe2\xc3\xf6\x54\xa0\x39\x04\x28\x36\x40\xb3\x69\x0f\x45\x41\xd0\xe4\x48\x9a\xb5\xcc\x51\x39\xd4\x3a\x6e\x9c\xff\x5e\x50\x94\x2c\xd9\x31\xb6\xc9\xa9\x45\xf7\xb2\xe0\x0c\x39\xe4\xcc\x7b\x6f\x46\xeb\xc5\x02\xfe\xb7\xa5\xd2\xeb\x80\xf0\xa1\x99\xbd\xbd\x7b\xff\xe6\xe7\x7b\x78\x7b\x77\xff\x0e\xaa\xbd\xf5\x5a\x99\x9a\xd0\x05\x98\x93\xcd\x41\xd7\x35\xef\xd0\x2a\xc3\x5e\x14\x7b\x2a\xc9\x49\x0e\xe9\x84\x72\x7a\x8b\x47\x43\xd0\x78\x0c\x39\x78\xb4\xe4\xd1\x04\xd5\x7a\x92\x1c\x4a\xaf\x5d\x50\x61\xdf\xa0\xc4\x3d\x69\xd8\x09\x0e\xb6\x18\x6e\x30\x07\xde\x39\xf4\x39\x34\x5c\x93\xd9\xc7\xb8\x1c\x02\x4b\x5a\xf4\xb7\x77\xeb\x9a\x4b\xee\xbd\xec\x82\x36\x41\xce\x5e\x57\xf8\xb1\x21\x8f\xa2\x74\xc8\x41\xd0\x04\xf6\x8a\x2c\xba\x40\x05\xa1\x4f\xa1\x0f\xbb\x8d\xa4\xbf\xc3\x4b\x1b\x74\x0a\x9d\x6d\x98\x5c\x50\xba\x0d\x95\xda\x62\xa8\xd8\xc6\x7c\xff\x68\x51\x86\x52\x06\x8b\xd7\x0f\xb1\x3e\xa1\xd2\x91\x2b\x95\xae\xcb\x1c\x5a\x41\x4f\xae\xe0\xce\x8b\x56\x1d\x2b\xed\x76\xa5\x4d\x21\xb1\xec\x1c\x74\x6b\x09\x9d\xc1\xab\xd9\x2f\x3f\xfc\xf4\xe1\xcd\xfb\x19\xc0\x3c\x5b\x2d\x52\x25\x59\x0e\x59\x15\x42\x73\xbb\x5c\xd6\x6c\x74\x5d\xb1\x84\x43\xef\x28\x99\xcb\x1a\xe3\x09\xe1\x2d\x4e\x02\xf4\xda\x58\x2c\xbe\x2e\x34\x16\xc8\x9e\xfe\x44\x65\xd8\xe2\x81\xb6\x4d\x4d\x86\xba\x6b\x3a\x28\x0e\x64\x55\xb7\x88\x9e\x82\xf9\xb0\xd6\xbe\x8b\x43\x87\x5a\x26\x6f\x24\xba\x26\x8e\xc0\xd3\xed\x0b\xe5\x94\x3c\x5e\x74\x28\x38\x5a\xd7\xe3\x7e\xe2\x2b\x9e\xf8\xf4\x72\x83\x7b\x79\x79\x0b\xbf\xfd\xfe\x79\x72\x41\xe4\x2c\x9a\x8e\x1d\x4e\xdc\xad\xa7\xff\x1f\xc6\xf5\x4d\xdc\xf2\x72\xf3\x7a\x95\x16\xaf\x6f\xba\x45\xd3\xae\x6b\x32\x43\x98\xdc\x2e\x97\xbb\xdd\xee\x15\xfb\xfd\x2b\xa9\x96\xba\xa1\xec\xea\xfb\xd9\xb4\x17\x66\x2f\x52\x33\x70\xc4\xeb\xa6\x93\x45\xd4\x91\xd1\x81\xd8\x29\x41\x11\x62\xd7\xf7\xc8\xb8\x87\x36\x49\x2f\xf1\x7d\x24\xf8\x45\xe4\xb7\xe6\x92\xdc\xa2\x8f\x5c\x90\xcd\x72\xb8\x7b\xf7\xeb\xfc\x2a\x87\x6c\xb5\x90\x76\xfd\x6d\x19\xf4\x62\x84\xb9\xa9\x74\x5d\xa3\x2b\x31\x87\x47\xf4\x9d\xd0\x8f\x5d\x11\xb3\xeb\x73\x99\x8a\xb9\xce\x41\x36\xd4\x1c\x5d\x68\x55\xdf\x89\x46\x7c\x71\xa9\xa0\xf1\x60\xb4\x98\xac\x51\xb1\x05\xf1\x63\xe8\xba\x92\x8e\x88\x74\x4f\x4e\x4f\xab\x2f\xd4\xde\x81\xd1\x1f\xc9\xba\xe2\x87\xbc\x93\x35\x0a\xa7\x83\x25\x26\x9f\x8c\x61\xb2\x64\x39\x14\xba\x16\x4c\x27\x62\xe2\x7d\xa0\xf8\x62\x04\x75\xc0\xf6\xd3\xe7\xb4\x7b\x01\xfe\x6c\xb5\xd0\xad\xfd\x1b\xdc\x4d\x6c\x63\x17\xfe\x45\x80\x17\xec\x4d\xbc\xa1\x1f\x2a\xe3\x80\xbb\xc4\x45\xf2\x4c\x72\xbe\x48\x4e\x0e\xda\xf8\x7f\x9a\xa1\x54\x57\xd7\x0a\x4f\x30\x76\x92\x57\xa4\x2f\x2d\x8c\xff\x36\x1e\x55\xa5\x9d\xad\xd1\x9e\xf0\xd9\x7d\xac\x46\x72\x3c\x6e\x71\xbb\x8e\xb8\x0e\x2b\x55\xb0\xcf\x01\xbd\x67\x7f\xce\xd1\x00\xba\x36\x06\x45\xd2\x08\x1d\xbd\xc3\x50\xbd\xc4\xf5\x4e\x8b\x6a\x05\xed\xf8\xfe\xd7\xb5\xcd\x00\x6c\xf0\x2d\xe6\xf0\xdd\xea\xfa\x7a\x00\xf3\x14\xd9\xa9\x6b\xa4\x65\x50\xfe\x62\x01\xf7\x15\x42\xe3\xf1\x91\xb8\x15\x58\xd7\x6c\x36\x40\x02\x0f\xad\x04\x08\x0c\x25\x86\x28\x39\xa4\xd2\x41\x9c\xcb\xb0\x63\xbf\x21\x57\x3e\x39\xac\x3a\x10\x60\x1e\xbf\x86\x3a\xb4\x7e\xd4\xdd\x17\x03\xe2\xb4\x77\x12\xf0\x67\x3c\x14\xec\xb7\xca\xea\xa0\x47\x3c\x7b\x6b\x68\x35\x6d\x02\x3d\x9e\x61\x25\x54\x9e\x2b\x66\x9c\xb7\x27\x12\x1e\x05\xda\x3f\x3c\xba\xb2\x89\x3e\x47\xa9\x47\xc4\x9f\x56\x9b\xc7\xc2\xa3\x54\xcf\x18\x81\xf8\xdf\xc5\x33\x2e\x3f\x8e\xec\x67\x5c\x7e\xb3\x31\xff\x7d\xf6\xa7\xbf\xa4\x7e\xe4\x9d\x9b\xfd\x15\x00\x00\xff\xff\x8b\xcd\x47\x00\x5b\x0d\x00\x00")

func migrationsSqlTests6_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests6_testSql,
		"migrations/sql/tests/6_test.sql",
	)
}

func migrationsSqlTests6_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests6_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/6_test.sql", size: 3419, mode: os.FileMode(438), modTime: time.Unix(1542561049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests7_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x4d\x6f\xdb\x46\x13\x3e\x5b\xbf\x62\x90\x0b\x1d\xbc\x64\x9c\x38\x48\x02\xe4\x3d\x15\x68\x0e\x01\x8a\x04\x68\x92\xf6\x50\x14\x8b\xd5\xee\x90\xdc\x88\xda\x61\x77\x96\x96\xdd\x28\xff\xbd\x58\x2e\x29\x52\xb6\xe0\x0f\xc0\x68\x44\x55\x17\x63\x77\xf6\x6b\xe6\x79\x9e\x99\xa1\x00\x67\x19\xfc\x6f\x69\x0a\x27\x3d\xc2\x97\x7a\xf6\xfe\xc3\xa7\x77\xbf\x7e\x86\xf7\x1f\x3e\x7f\x84\xf2\x4a\x3b\x29\x54\x65\xd0\x7a\x38\x35\x3a\x05\x59\x55\xb4\x42\x2d\x14\x39\x16\xe4\x4c\x61\x2c\xa7\x10\x77\x08\x2b\x97\xb8\x99\x30\x2a\x87\x3e\x05\x87\xda\x38\x54\x5e\x34\xce\x70\x0a\x85\x93\xd6\x0b\x7f\x55\x23\x87\x35\xae\xc9\x32\xf6\x73\x56\x54\x63\x0a\xb4\xb2\xe8\x52\xa8\xa9\x32\xea\x2a\x9c\x4b\xc1\x13\xc7\x41\x77\x7b\x3b\xae\xa8\xa0\xce\x4a\xd6\x4b\xe5\xf9\xda\xeb\x02\x2f\x6b\xe3\x90\x85\xf4\x29\x30\x2a\x4f\x4e\x18\x8d\xd6\x9b\xdc\xa0\x8b\x47\xbf\xae\x16\x1c\xff\xf6\x2f\x2d\xd0\x0a\xb4\xba\x26\x63\xbd\x90\x8d\x2f\xc5\x12\x7d\x49\x3a\xf8\xfb\x57\x83\xdc\x87\xd2\xcf\x68\xfe\x35\xc4\xc7\xa6\xb0\xc6\x16\x42\x56\x45\x0a\x0d\xa3\x33\x36\xa7\xd6\x8a\x5a\x6c\x22\x6d\x57\xb9\x89\x47\x42\xd8\x29\xc8\x46\x1b\xb4\x0a\x9f\xce\x7e\xfb\xe9\x97\x2f\xef\x3e\xcd\x00\x4e\x93\x37\x59\x8c\x24\x49\x21\x29\xbd\xaf\xdf\x9e\x9d\x55\xa4\x64\x55\x12\xfb\x75\x67\x28\x88\x8a\x0a\xc3\x0e\xa6\x25\x8e\x0e\xc8\xb9\xd2\x98\xdf\xef\x68\x08\x90\x9c\xf9\x1b\x85\x22\x8d\x6b\xb3\xac\x2b\xa3\x4c\x7b\x4d\x0b\xc5\xda\x68\xd1\x0e\x82\x25\x27\x5a\xcf\xa5\x6b\xcf\xa1\x45\xc9\xa3\x37\x22\x5d\x23\x83\xa7\xf1\xf2\x8e\x70\x0a\x1a\x2e\x5a\xe7\x14\x66\xcf\x87\xf5\xc8\x57\xd8\xf1\xed\xc9\x02\xaf\xf8\xc9\x5b\xf8\xe3\xcf\xef\xa3\x0b\x02\x67\x61\x6a\xc9\xe2\xc8\xdc\x38\xf3\x62\x3d\x8c\xcf\xc3\x92\xe3\xf3\x57\xaf\xe3\xe0\xd5\x79\x3b\xa8\x9b\x79\x65\x54\x7f\x8c\xdf\x9e\x9d\xad\x56\xab\x67\xe4\xae\x9e\x71\x79\x26\x6b\x93\x3c\xfd\xff\x6c\x9c\x0b\xb3\x93\x98\x0c\x14\xf0\x3a\x6f\x65\x11\x74\xa4\xa4\x37\x64\x05\x23\xb3\x21\xdb\xe5\xc8\xb0\x86\x3a\x4a\x2f\xf2\xbd\x21\xf8\x24\xf0\x5b\x51\x61\x6c\xd6\x9d\xcc\x8c\x4e\x52\xf8\xf0\xf1\xf7\xd3\xa7\x29\x24\x6f\x32\x6e\xe6\x0f\xf3\xa0\x13\x23\x9c\xaa\x52\x56\x15\xda\x02\x53\xb8\x40\xd7\x0a\x7d\x93\x15\xc1\xbb\xce\x97\xb1\x98\xab\x14\x78\x61\xea\x8d\x09\xb5\xe8\x32\x51\xb1\xcb\x77\x05\x34\x6c\x0c\x33\x32\x5a\x89\x90\x82\x78\xe9\xdb\xac\x34\x1b\x44\xda\x27\xc7\xbb\xc5\x0d\xb5\xb7\x60\x74\x5b\x92\x36\xf8\xde\xef\x38\x1b\x84\xd3\xc2\x12\x9c\x8f\x93\xbe\xb2\x24\x29\xe4\xb2\x62\x8c\x3b\x82\xe3\xdd\x41\x76\xf9\x00\x6a\x8f\xed\xb7\xef\x71\x75\x07\xfc\xc9\x9b\x4c\x36\xfa\x0e\xdc\x55\x48\x63\xeb\xf7\x08\xf0\x9c\x9c\x0a\x37\x74\x45\x65\x28\x70\xbb\xb8\x88\x96\x91\xcf\x3b\xc9\x49\x41\x2a\xf7\xa3\x19\x8a\x71\xb5\xa9\x70\x0b\x63\x5b\x7e\x05\xfa\xe2\x40\xb9\x87\xf1\x28\x4a\x69\x75\x85\x7a\x8b\xcf\xb6\x59\x0d\xe4\x38\x5c\xe2\x72\x1e\x70\xed\x47\x22\x27\x97\x02\x3a\x47\xee\x3a\x47\x3d\xe8\x52\x29\x64\x8e\x25\x74\xb0\xf6\x45\x75\x17\xd7\x2b\xc9\xa2\x61\xd4\xc3\xfb\xf7\x4b\x9b\x1e\x58\xef\x1a\x4c\xe1\xe5\xeb\xe7\xcf\x7b\x30\xb7\x91\x1d\x9b\x06\x5a\xee\x56\xfe\x41\x56\x9c\xec\xc5\xb6\xa2\xfb\xf9\xb1\xea\xec\x53\xd5\xf9\x97\x59\x7a\x50\xe5\xe9\x7d\xf9\x8f\xd6\x9e\x3e\xfc\xc7\xa9\x3e\x59\x06\x9f\x4b\x84\xda\xe1\x85\xa1\x86\x61\x5e\x91\x5a\x80\x61\xf8\xda\xb0\x07\x4f\x50\xa0\x0f\xd2\x43\x53\x58\x08\x5f\x85\xb0\x22\xb7\x30\xb6\xb8\xb5\x70\xb5\x30\xc0\x69\xf8\x16\x97\xbe\x71\x83\xfe\x6e\x14\x8b\xed\x1c\x8a\xd0\x5f\x63\x22\x27\xb7\x14\x5a\x7a\x39\x20\xda\xcd\xfa\x94\x93\xca\x9b\x8b\x6d\x91\x6f\x14\xbe\x81\x75\x27\xa6\x6c\x8a\xeb\x5d\x6d\xf8\x26\xdc\x12\xfb\x20\xe5\xee\xc6\xc1\x94\x8c\x94\x3c\x24\x45\xe4\x65\xb8\x1a\xf5\xa0\xd8\xfe\x8a\xbb\xeb\x90\xc3\xdc\x21\x97\x47\x2c\x1f\x01\xcb\xf0\x7b\xeb\x08\xe4\x23\x00\x19\x1a\xd3\x11\xc8\x47\x00\xb2\x5e\xa8\xa3\x22\xef\x0f\x64\x96\x41\x85\x3e\x61\x90\x15\x13\x18\xcb\xe8\x3c\x84\x20\xc1\x97\xd2\x87\xae\xe5\x30\x47\x87\x56\x19\x5b\x80\x2f\x8d\x2d\x38\x2e\x69\xb2\x89\x07\xbc\x34\xec\x0f\xa6\x71\xc5\x0f\x01\x93\x69\xca\x2c\xf9\xac\x0d\x6e\xef\x14\x3e\xad\xfe\x35\x09\x48\x27\xd4\xc6\x26\x81\xe7\x84\xba\xd9\x24\xf0\x9c\x50\x53\xdb\x1f\x3c\x4f\x66\x27\x07\xd3\x97\xce\x6f\xfe\x5c\xdf\x2f\x85\x4e\xac\x29\xdd\x82\xe7\x0d\xe9\x1e\xfb\xd2\x21\x41\x3a\xa5\xd6\x34\x11\x48\xa7\xd4\x9d\xf6\x09\xd2\x43\x6a\x50\x2f\x3b\x44\x8e\x5d\xe9\xe0\x40\x9c\x52\x13\xda\x4f\x04\xa7\xd4\x73\xf6\x13\xc1\x29\xb5\x98\x1f\x89\xe0\xf8\x1f\xe1\x7e\xa6\x95\x9d\xfd\x13\x00\x00\xff\xff\xb4\xb4\xad\x9e\x1a\x27\x00\x00")

func migrationsSqlTests7_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests7_testSql,
		"migrations/sql/tests/7_test.sql",
	)
}

func migrationsSqlTests7_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests7_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/7_test.sql", size: 10010, mode: os.FileMode(438), modTime: time.Unix(1542575379, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests8_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x51\x6f\xdb\x36\x10\x7e\xae\x7f\x05\xd1\x17\x39\x18\x5d\x67\x19\x5a\x04\xd9\xd3\x80\xf5\xa1\xc0\x90\x02\x6b\xba\x3d\x0c\x03\x41\x93\x27\xe9\x62\x99\xa7\xf1\xa8\xb8\x5e\xdd\xff\x3e\x50\x94\x4c\x39\x35\xda\x14\x08\xb0\x3e\xe4\x25\xe0\x1d\x79\xe4\xdd\xf7\x7d\x77\x8a\x17\x0b\xf1\xc3\x06\x2b\xaf\x03\x88\xf7\xed\xec\xcd\xf5\xbb\xd7\xbf\xdf\x88\x37\xd7\x37\x6f\x45\xbd\xb3\x5e\x2b\xd3\x20\xb8\x20\xe6\x68\xa5\xd0\x4d\x43\x5b\xb0\xca\x90\x67\x45\x1e\x2b\x74\x2c\x45\x3a\xa1\x9c\xde\xc0\xc1\x60\x30\x1e\x82\x14\x1e\x2c\x7a\x30\x41\x75\x1e\x59\x8a\xca\x6b\x17\x54\xd8\xb5\xc0\x71\x8f\x5b\x72\x0c\xa3\xcd\x86\x5a\x90\x82\xb6\x0e\xbc\x14\x2d\x35\x68\x76\x31\x4e\x8a\x40\x9c\x16\xc3\xed\xfd\xba\xa1\x8a\x06\x2f\xb9\xa0\x4d\xe0\x7b\xaf\x2b\xf8\xd0\xa2\x07\x56\x3a\x48\xc1\x60\x02\x79\x85\x16\x5c\xc0\x12\xc1\xa7\xd0\xdb\xed\x9a\xd3\xdf\xf1\xa5\x35\x38\x05\xce\xb6\x84\x2e\x28\xdd\x85\x5a\x6d\x20\xd4\x64\x63\xbe\xff\x74\xc0\x63\x29\xa3\x45\xab\xdb\x58\x1f\x63\xe5\xd0\x55\x4a\x37\x95\x14\x1d\x83\x47\x57\x52\xef\x05\xab\x0e\x95\xf6\xbb\xdc\xa5\x90\x58\xb6\x14\xba\xb3\x08\xce\xc0\xd9\xec\x8f\x5f\x7e\x7b\xff\xfa\xdd\x4c\x88\x79\x71\xb9\x48\x95\x14\x52\x14\x75\x08\xed\xd5\x72\xd9\x90\xd1\x4d\x4d\x1c\xf6\x83\xa3\x22\xaa\x1a\x88\x27\x98\x36\x30\x09\xd0\x2b\x63\xa1\x7c\x58\x68\x2c\x90\x3c\xfe\x0b\xca\x90\x85\x3d\x6e\xda\x06\x0d\xf6\xd7\xf4\x50\xec\xd1\xaa\x7e\x11\x3d\x25\xd1\x7e\xa5\x7d\x1f\x07\x0e\x34\x4f\xde\x48\x74\x4d\x1c\x81\xa6\xdb\x27\xca\xa9\x28\x5f\xb4\x2f\x29\x5a\xe7\x79\x3f\xf1\x15\x4f\x7c\x7c\xbe\x86\x1d\x3f\xbf\x12\x7f\xfd\xfd\x69\x72\x41\xe4\x2c\x9a\x8e\x1c\x4c\xdc\x9d\xc7\x1f\xf7\x79\x7d\x11\xb7\x3c\x5f\xbc\x7c\x95\x16\x2f\x2f\xfa\x45\xdb\xad\x1a\x34\x63\x18\x5f\x2d\x97\xdb\xed\xf6\x05\xf9\xdd\x0b\xae\x97\xba\xc5\xe2\xec\xe7\xd9\xb4\x17\x66\xcf\x52\x33\x50\xc4\xeb\xa2\x97\x45\xd4\x91\xd1\x01\xc9\x29\x06\x66\x24\x37\xf4\x48\xde\x03\x9b\xa4\x97\xf8\x3e\x10\xfc\x2c\xf2\xdb\x50\x85\x6e\x31\x44\x2e\xd0\x16\x52\x5c\xbf\xfd\x73\x7e\x26\x45\x71\xb9\xe0\x6e\xf5\x6d\x19\x0c\x62\x14\x73\x53\xeb\xa6\x01\x57\x81\x14\x77\xe0\x7b\xa1\x1f\xba\x22\x66\x37\xe4\x32\x15\x73\x23\x05\xaf\xb1\x3d\xb8\xc0\xaa\xa1\x13\x0d\xfb\xf2\x54\x41\xf9\x60\xb4\x08\xad\x51\xb1\x05\xe1\x43\xe8\xbb\x12\x0f\x88\xf4\x4f\x4e\x4f\xab\xcf\xd4\xde\x83\x31\x1c\x29\xfa\xe2\xc7\xbc\x93\x95\x85\xd3\xc3\x12\x93\x4f\xc6\x38\x59\x0a\x29\x4a\xdd\x30\xa4\x13\x31\xf1\x21\x90\x7d\x99\x41\x1d\xb1\xfd\xf8\x29\xed\x9e\x80\xbf\xb8\x5c\xe8\xce\x7e\x05\x77\x13\xdb\xd8\x85\xef\x08\xf0\x92\xbc\x89\x37\x0c\x43\x25\x0f\xb8\x53\x5c\x24\xcf\x24\xe7\x93\xe4\x48\xa1\x8d\xff\xbf\x19\x4a\x75\xf5\xad\xf0\x05\xc6\x8e\xf2\x8a\xf4\xa5\x85\xf1\xdf\xc6\xa3\xaa\xb5\xb3\x0d\xd8\x23\x3e\xfb\x8f\x55\x26\xc7\xc3\x06\x36\xab\x88\xeb\xb8\x52\x25\x79\x29\xc0\x7b\xf2\xf7\x39\x1a\x41\xd7\xc6\x00\x73\x1a\xa1\xd9\x3b\x0e\xd5\x53\x5c\x6f\x35\xab\x8e\xc1\xe6\xf7\x1f\xd6\x36\x23\xb0\xc1\x77\x20\xc5\x4f\xaf\xce\xcf\x47\x30\x8f\x91\x9d\xba\x32\x2d\xa3\xf2\x17\x0b\x71\x53\x83\x68\x3d\xdc\x21\x75\x2c\x56\x0d\x99\xb5\x40\x16\xb7\x1d\x07\x11\x48\x54\x10\xa2\xe4\x00\x2b\x27\xe2\x5c\x16\x5b\xf2\x6b\x74\xd5\x17\x87\x55\x0f\x82\x98\xc7\xaf\xa1\x0e\x9d\xcf\xba\xfb\x6c\x40\x1c\xf7\x4e\x02\xfe\x1e\x0f\x25\xf9\x8d\xb2\x3a\xe8\x8c\xe7\x60\x8d\xad\xa6\x4d\xc0\xbb\x63\x71\x1f\x94\x7d\x00\xf5\x24\xa2\x8c\xd5\x7d\x5d\xe5\xa9\x7c\x24\xf4\x2c\xe3\xe1\xc6\xec\x2a\x26\x2a\xce\x0d\x91\x78\xc9\x57\x83\xcd\x7a\x1d\xaf\xf8\xfa\xfc\xf1\x50\x7a\xe0\xfa\x09\xcb\x47\xc0\x32\xfe\xc7\xf3\x04\xe4\x23\x00\x19\x3f\x48\x4f\x40\x3e\x02\x90\xed\xda\x3c\x29\xf2\xe1\x40\x4e\x7f\xbb\xfe\x4a\x5b\x37\xfb\x2f\x00\x00\xff\xff\x54\xa3\xc7\x47\xcd\x0e\x00\x00")

func migrationsSqlTests8_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests8_testSql,
		"migrations/sql/tests/8_test.sql",
	)
}

func migrationsSqlTests8_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests8_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/8_test.sql", size: 3789, mode: os.FileMode(438), modTime: time.Unix(1542562435, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/sql/shared/1.sql":      migrationsSqlShared1Sql,
	"migrations/sql/shared/2.sql":      migrationsSqlShared2Sql,
	"migrations/sql/shared/3.sql":      migrationsSqlShared3Sql,
	"migrations/sql/shared/4.sql":      migrationsSqlShared4Sql,
	"migrations/sql/mysql/.gitkeep":    migrationsSqlMysqlGitkeep,
	"migrations/sql/mysql/5.sql":       migrationsSqlMysql5Sql,
	"migrations/sql/mysql/6.sql":       migrationsSqlMysql6Sql,
	"migrations/sql/mysql/7.sql":       migrationsSqlMysql7Sql,
	"migrations/sql/mysql/8.sql":       migrationsSqlMysql8Sql,
	"migrations/sql/postgres/.gitkeep": migrationsSqlPostgresGitkeep,
	"migrations/sql/postgres/5.sql":    migrationsSqlPostgres5Sql,
	"migrations/sql/postgres/6.sql":    migrationsSqlPostgres6Sql,
	"migrations/sql/postgres/7.sql":    migrationsSqlPostgres7Sql,
	"migrations/sql/postgres/8.sql":    migrationsSqlPostgres8Sql,
	"migrations/sql/tests/.gitkeep":    migrationsSqlTestsGitkeep,
	"migrations/sql/tests/1_test.sql":  migrationsSqlTests1_testSql,
	"migrations/sql/tests/2_test.sql":  migrationsSqlTests2_testSql,
	"migrations/sql/tests/3_test.sql":  migrationsSqlTests3_testSql,
	"migrations/sql/tests/4_test.sql":  migrationsSqlTests4_testSql,
	"migrations/sql/tests/5_test.sql":  migrationsSqlTests5_testSql,
	"migrations/sql/tests/6_test.sql":  migrationsSqlTests6_testSql,
	"migrations/sql/tests/7_test.sql":  migrationsSqlTests7_testSql,
	"migrations/sql/tests/8_test.sql":  migrationsSqlTests8_testSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"sql": &bintree{nil, map[string]*bintree{
			"mysql": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlMysqlGitkeep, map[string]*bintree{}},
				"5.sql":    &bintree{migrationsSqlMysql5Sql, map[string]*bintree{}},
				"6.sql":    &bintree{migrationsSqlMysql6Sql, map[string]*bintree{}},
				"7.sql":    &bintree{migrationsSqlMysql7Sql, map[string]*bintree{}},
				"8.sql":    &bintree{migrationsSqlMysql8Sql, map[string]*bintree{}},
			}},
			"postgres": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlPostgresGitkeep, map[string]*bintree{}},
				"5.sql":    &bintree{migrationsSqlPostgres5Sql, map[string]*bintree{}},
				"6.sql":    &bintree{migrationsSqlPostgres6Sql, map[string]*bintree{}},
				"7.sql":    &bintree{migrationsSqlPostgres7Sql, map[string]*bintree{}},
				"8.sql":    &bintree{migrationsSqlPostgres8Sql, map[string]*bintree{}},
			}},
			"shared": &bintree{nil, map[string]*bintree{
				"1.sql": &bintree{migrationsSqlShared1Sql, map[string]*bintree{}},
				"2.sql": &bintree{migrationsSqlShared2Sql, map[string]*bintree{}},
				"3.sql": &bintree{migrationsSqlShared3Sql, map[string]*bintree{}},
				"4.sql": &bintree{migrationsSqlShared4Sql, map[string]*bintree{}},
			}},
			"tests": &bintree{nil, map[string]*bintree{
				".gitkeep":   &bintree{migrationsSqlTestsGitkeep, map[string]*bintree{}},
				"1_test.sql": &bintree{migrationsSqlTests1_testSql, map[string]*bintree{}},
				"2_test.sql": &bintree{migrationsSqlTests2_testSql, map[string]*bintree{}},
				"3_test.sql": &bintree{migrationsSqlTests3_testSql, map[string]*bintree{}},
				"4_test.sql": &bintree{migrationsSqlTests4_testSql, map[string]*bintree{}},
				"5_test.sql": &bintree{migrationsSqlTests5_testSql, map[string]*bintree{}},
				"6_test.sql": &bintree{migrationsSqlTests6_testSql, map[string]*bintree{}},
				"7_test.sql": &bintree{migrationsSqlTests7_testSql, map[string]*bintree{}},
				"8_test.sql": &bintree{migrationsSqlTests8_testSql, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
