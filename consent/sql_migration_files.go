// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// migrations/sql/shared/.gitkeep
// migrations/sql/shared/1.sql
// migrations/sql/shared/2.sql
// migrations/sql/shared/3.sql
// migrations/sql/mysql/.gitkeep
// migrations/sql/mysql/4.sql
// migrations/sql/mysql/5.sql
// migrations/sql/mysql/6.sql
// migrations/sql/mysql/7.sql
// migrations/sql/postgres/.gitkeep
// migrations/sql/postgres/4.sql
// migrations/sql/postgres/5.sql
// migrations/sql/postgres/6.sql
// migrations/sql/postgres/7.sql
// migrations/sql/tests/.gitkeep
// migrations/sql/tests/1_test.sql
// migrations/sql/tests/2_test.sql
// migrations/sql/tests/3_test.sql
// migrations/sql/tests/4_test.sql
// migrations/sql/tests/5_test.sql
// migrations/sql/tests/6_test.sql
// migrations/sql/tests/7_test.sql
package consent

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrationsSqlSharedGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlSharedGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlSharedGitkeep,
		"migrations/sql/shared/.gitkeep",
	)
}

func migrationsSqlSharedGitkeep() (*asset, error) {
	bytes, err := migrationsSqlSharedGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/.gitkeep", size: 0, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared1Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x41\x8f\xda\x30\x10\x85\xcf\xce\xaf\x98\x23\xa8\xac\x54\xad\xba\xa7\x3d\xd1\x42\xa5\xaa\x14\x56\x08\x54\xed\xc9\x32\xf6\x40\xdc\x4d\x6c\x6a\x3b\x4b\xfb\xef\xab\x84\x04\x88\x93\x98\x2c\x5d\xae\xbc\x19\xcf\xbc\xef\xd9\xb9\xbb\x83\x0f\xa9\xdc\x19\xe6\x10\xd6\xfb\xe8\xcb\x72\x3a\x5e\x4d\x61\x35\xfe\x3c\x9b\x42\xfc\x57\x18\x46\x35\xcb\x5c\x7c\x4f\xb9\x56\x16\x95\xa3\x06\x7f\x67\x68\x1d\x0c\x22\xc2\x63\x96\x24\xa8\x76\x08\x40\x08\x01\x78\x65\x86\xc7\xcc\x0c\x3e\x7d\x1c\xc2\x7c\xb1\x82\xf9\x7a\x36\x83\xa7\xe5\xb7\x1f\xe3\xe5\x33\x7c\x9f\x3e\x8f\x22\xf2\x8a\x46\x6e\x25\x1a\x38\xfd\xda\x8a\x46\x11\xe1\x89\xcc\x4f\x93\xa2\xe8\x7c\x96\xdd\x3f\x3c\xd4\x74\x36\xdb\xfc\x42\xee\xc8\x15\x59\x39\x35\xcd\x4c\x52\x28\x1d\xfe\x71\xb5\x36\x2f\x72\x5f\xf5\x00\xd8\x68\x9d\xb4\x54\xa3\xa0\x96\xeb\x3d\x12\xe2\x97\x73\x6b\xb6\xe7\xf2\x8e\x95\x72\x1f\x51\x39\xc9\x59\xde\x89\x39\xe2\x64\x8a\xd6\xb1\x74\xdf\x3c\x87\xb9\xdc\xd3\x0b\x41\x65\xe7\x64\xfa\x75\xbc\x9e\xad\x40\xe9\xc3\x60\x38\x8a\x88\x96\x82\xe7\x6c\xf2\x89\x1a\x8b\x45\xc3\xc7\x00\xd1\x8b\x79\xa4\x56\xff\x09\xf6\xaa\x45\x27\xf2\x1e\x29\x9f\x7b\x1f\x27\x6f\x81\x0e\xd0\x18\x29\x0c\xbd\x6f\x02\x6f\x80\x76\x3d\x09\xef\x87\xd5\xa2\xb5\x52\xab\x1c\xab\x14\xc7\x4d\x03\x04\x3c\xaa\xfe\xa0\x00\x81\xed\xe6\x8b\x9f\xc5\x76\x25\x1d\xff\x98\x9a\x6f\xe1\x15\xbc\xb7\x86\xc6\x4c\x89\x04\x45\x33\x9a\x7d\xf7\xd8\x19\xa6\x2e\xb2\x59\x94\xf9\x69\x30\x98\x62\xba\x41\x13\x7a\x06\x8e\x0a\xba\xd5\xa6\x14\x49\x55\xeb\x81\xc6\x14\x7f\x55\x1d\xda\x4e\xa9\xa7\x85\x04\x2d\xad\x02\x53\x42\xa4\x8c\x73\xb4\x96\x3a\xfd\x82\xaa\x25\xcf\xa5\x4a\x8a\x4a\xd1\xf2\xd2\x35\xb2\x57\x9f\xe0\x28\x3a\x30\x4b\x33\x8b\x02\x3a\xcc\xb8\xe5\x61\xe9\xa6\xd8\x13\xa2\x97\xab\xd0\x8d\x3c\x91\xec\x03\x32\xc4\xb1\x0b\x23\xe3\x6f\xc3\xdc\x8b\x72\x03\xcd\x15\x32\x1d\x60\xa2\xcb\x6f\xfa\x44\x1f\x54\x34\x59\x2e\x9e\x7a\xdc\xb3\xc7\x4e\x61\x3b\xd1\xde\xfa\x32\x98\xdd\xfa\x8e\x0b\xff\xd6\x81\xce\x75\xff\x02\x00\x00\xff\xff\x5a\xbe\x93\x31\xd7\x08\x00\x00")

func migrationsSqlShared1SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared1Sql,
		"migrations/sql/shared/1.sql",
	)
}

func migrationsSqlShared1Sql() (*asset, error) {
	bytes, err := migrationsSqlShared1SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/1.sql", size: 2263, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared2Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd1\x41\x4f\xf3\x20\x18\x07\xf0\x33\x7c\x8a\xe7\xb6\x2d\xef\x76\x59\xb2\x53\x4f\xbc\x2d\x46\x23\x5b\x17\xd2\x9a\xec\x44\x18\x50\x8b\x99\xa0\x40\x35\x7e\x7b\xd3\xa5\x73\xc6\xd8\x64\x99\x3d\xf4\xf4\xe7\xf9\xc1\xf3\x5f\x2c\xe0\xdf\xb3\x7d\x0c\x32\x19\xa8\x5f\x30\x61\x15\xe5\x50\x91\xff\x8c\x42\xfb\xa1\x83\x14\x5e\x76\xa9\x5d\x0a\xe5\x5d\x34\x2e\x89\x60\x5e\x3b\x13\x13\x90\xa2\x80\xc6\x07\x65\xb4\x88\xdd\xfe\xc9\xa8\x24\xac\x36\x2e\xd9\xc6\x9a\x00\x0f\x84\xe7\xb7\x84\x4f\x97\xab\xd5\x0c\x36\x35\x63\x50\xd0\x1b\x52\xb3\x0a\x26\x93\x6c\x1c\xe9\xff\xfd\x0c\x25\x93\xf5\xee\x64\x89\x56\x3a\x7d\x30\xfa\x4f\x66\xce\x29\xa9\xe8\x6f\xa8\xdf\x37\x5d\x54\x32\x19\xfd\xd3\x8f\x26\x46\xeb\x1d\x4c\x31\x1a\x3c\x00\x84\x10\x0c\xdf\x9b\x0c\xaa\x95\x61\x00\xcb\xea\x88\xce\x31\x52\x07\xdb\x6f\xca\xea\x73\x78\x2c\x7a\x7a\xc6\xf9\x0e\x68\x3c\xbc\xe5\x77\x6b\xc2\x77\x70\x4f\x77\xd3\xe1\xe0\x1c\xbe\xb0\x19\x9e\x65\x18\x7f\xaf\xb3\xf0\xef\xee\xf2\x42\x0b\x5e\x6e\x21\x2f\x59\xbd\xde\x8c\x2f\xf9\xfa\xee\x2e\x1c\x7f\x8c\x5d\x53\x52\x86\x3f\x03\x00\x00\xff\xff\x48\xef\x86\x01\xca\x02\x00\x00")

func migrationsSqlShared2SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared2Sql,
		"migrations/sql/shared/2.sql",
	)
}

func migrationsSqlShared2Sql() (*asset, error) {
	bytes, err := migrationsSqlShared2SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/2.sql", size: 714, mode: os.FileMode(438), modTime: time.Unix(1542388036, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlShared3Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xb1\xca\xc2\x30\x14\x46\xe7\xf4\x29\xee\xd6\xff\x47\x0a\x22\x6e\x4e\xb1\xa9\x38\xc4\x56\x42\xe3\x1a\x42\x7b\x69\x03\x35\xd1\x26\x45\x7c\x7b\xe9\x22\x42\x41\x6c\x97\x3b\x9e\x7b\xbe\x93\x24\xb0\xba\x9a\xa6\xd7\x01\x41\xde\x22\xca\xcb\x4c\x40\x49\xf7\x3c\x83\xf6\x59\xf7\x5a\x39\x3d\x84\x76\xa3\x2a\x67\x3d\xda\xa0\x7a\xbc\x0f\xe8\x03\x50\xc6\xa0\x73\x8d\xb1\xca\xa3\xf7\xc6\x59\x65\x6a\xb8\x50\x91\x1e\xa9\xf8\xdb\xae\xff\x21\x97\x9c\x03\xcb\x0e\x54\xf2\x12\xe2\x78\xb7\x04\x5d\xb5\xba\xeb\xd0\x36\xb8\x90\x3c\x5e\xb4\xc1\x54\x3a\x8c\x86\xcb\xdd\x09\x21\x24\xfa\x4c\xc5\xdc\xc3\xfe\xbe\x88\x89\xe2\x0c\x69\xc1\xe5\x29\x9f\x3c\x9e\x11\x66\x8a\x79\x07\x9a\x1f\xe1\xbb\xd3\x2b\x00\x00\xff\xff\xb0\x4c\xb3\x00\x17\x02\x00\x00")

func migrationsSqlShared3SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlShared3Sql,
		"migrations/sql/shared/3.sql",
	)
}

func migrationsSqlShared3Sql() (*asset, error) {
	bytes, err := migrationsSqlShared3SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/shared/3.sql", size: 535, mode: os.FileMode(438), modTime: time.Unix(1542540402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysqlGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlMysqlGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysqlGitkeep,
		"migrations/sql/mysql/.gitkeep",
	)
}

func migrationsSqlMysqlGitkeep() (*asset, error) {
	bytes, err := migrationsSqlMysqlGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/.gitkeep", size: 0, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql4Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd2\x41\x4b\x03\x31\x10\x05\xe0\xfb\xfe\x8a\xb9\xf5\x20\xbd\x78\x5d\x3c\xac\x26\x82\x90\x36\xa5\x26\xa0\xa7\x30\x6c\x86\x6e\x40\x27\x9a\x66\x11\xff\xbd\xb4\x14\x29\x92\xd4\x56\xf7\xb2\xec\xe9\x63\xde\x7b\x99\xcf\xe1\xea\x35\x6c\x12\x66\x02\xfb\xd6\x74\xca\xc8\x35\x98\xee\x56\x49\x18\x3e\x7d\x42\x17\x71\xcc\xc3\xb5\xeb\x23\x6f\x89\xb3\x4b\xf4\x3e\xd2\x36\x43\x27\x04\x1c\xfe\xc9\x3b\xcc\x0e\x47\x1f\x88\x7b\x02\x23\x9f\x0c\x2c\xad\x52\x6d\x5d\xdb\x7d\x89\x73\xe8\x31\x87\xc8\x13\xa1\x3f\x4e\x74\x03\xb2\x7f\x21\xbf\x57\x37\x09\xf9\x84\xd9\xd8\x95\xe8\xcc\x2f\x91\x1f\xa5\x29\x5f\x77\x33\x9b\xb5\x45\xa1\x12\xf3\x72\xa8\x16\x6d\x27\x15\xa2\xed\x9d\xf3\xb7\x5c\x68\xf1\x70\xff\x7c\xb2\x79\xfd\xd7\x49\x27\xb1\x6b\xf1\x0f\x78\x7d\xdc\x6f\xba\x39\x7e\xe7\x22\x7e\xf0\xf9\xed\x88\xb5\x5e\xc1\x9d\x56\x76\xb1\x2c\xc7\xb8\xbc\x94\xff\x90\xb5\x2e\x8e\xcd\x42\x21\x6d\xf3\x15\x00\x00\xff\xff\x99\xcd\x38\x04\xea\x03\x00\x00")

func migrationsSqlMysql4SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql4Sql,
		"migrations/sql/mysql/4.sql",
	)
}

func migrationsSqlMysql4Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql4SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/4.sql", size: 1002, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql5Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x93\x4f\x4b\xc4\x30\x10\xc5\xef\xf9\x14\x39\xba\xe8\x5e\xbc\xe6\x24\xb6\x87\xbd\x74\x75\xb1\xe0\x2d\xa4\xc9\xac\x3b\xa2\x89\xe6\x8f\x7f\xbe\xbd\x54\x14\x43\xe9\xac\x89\x14\x4f\x85\x32\xf3\xde\xcb\x8f\x37\xeb\x35\x3f\x7d\xc4\x3b\xaf\x22\xf0\xfe\x89\x5d\xee\xda\x8b\x9b\x96\xf7\xdd\xe6\xba\x6f\xf9\xa6\x6b\xda\x5b\x7e\x78\x37\x5e\x49\xa7\x52\x3c\x9c\x4b\x37\xec\x53\xd0\x2a\x82\x91\xe3\x0f\xb0\x11\xb5\x8a\xe8\xac\x0c\x10\xc2\xe7\xd7\x49\x34\x6f\x7c\xdb\x55\x2e\xf2\x13\xfd\x80\x60\xa3\x44\x73\xc6\x43\x1a\xee\x41\xc7\x6c\x6b\x25\xd8\x77\xba\x99\x58\xda\xd9\x30\xee\x7a\x78\x4e\x10\xa2\xd4\x68\x66\x53\x4c\xe6\x32\xcf\x95\xa8\x90\x0f\x69\x28\x93\xff\x7a\xc7\x8f\x38\x4d\x76\xea\xf1\x02\x1e\xcb\x4c\xc6\xc9\x3d\x82\x3f\x8e\x68\x42\xfd\x37\x52\xf3\xe3\xa5\xc0\x08\x33\x8a\x1b\x65\x56\x81\x8f\x70\x24\x29\x52\x96\x39\xcc\xfc\x38\x1a\xf7\x6a\x59\xb3\xdb\x5e\xfd\xef\x55\x08\x46\x9a\xfe\xb1\xf3\xa2\x58\xb0\xb0\xe5\xe5\x82\xa5\x95\x3e\xf2\xe8\x45\x5a\x4c\x27\x5e\xa4\xb7\xd5\xf2\x95\x25\x15\xec\x23\x00\x00\xff\xff\x26\xc5\x0b\x30\xb6\x05\x00\x00")

func migrationsSqlMysql5SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql5Sql,
		"migrations/sql/mysql/5.sql",
	)
}

func migrationsSqlMysql5Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql5SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/5.sql", size: 1462, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql6Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\xce\xcf\x2b\x4e\xcd\x2b\x89\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x51\x70\x74\x71\x51\x48\x4c\x2e\x52\x08\x71\x8d\x08\x51\xf0\x0b\xf5\xf1\xb1\xe6\x0a\x0d\x70\x71\x0c\x21\xa0\x2d\xd8\x35\x04\xa4\xcd\x56\x5d\xdd\x9a\x78\xbb\x7c\xfd\x5d\x3c\xdd\x22\x91\xac\xf3\x87\x59\xc9\x85\xec\x7c\x97\xfc\xf2\x3c\xe2\x0d\x75\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x03\x99\x6c\xcd\x05\x08\x00\x00\xff\xff\x40\xd9\xef\x84\x0a\x01\x00\x00")

func migrationsSqlMysql6SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql6Sql,
		"migrations/sql/mysql/6.sql",
	)
}

func migrationsSqlMysql6Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql6SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/6.sql", size: 266, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlMysql7Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\xdf\x8f\x93\x40\x10\x7e\x6f\xc2\xff\x30\x6f\xd7\xc6\x5c\xa3\xc6\xb7\xa6\x0f\x2b\x0c\x5e\x23\x07\x97\x65\xab\xde\x13\x41\xd8\x6b\x89\x08\x5a\x68\x8c\xff\xbd\xe9\x15\x11\xf9\xb1\xec\x42\xa9\xbe\xf4\x65\x98\xef\xdb\x6f\x67\xe6\xdb\xe9\xed\x2d\xbc\xf8\x1a\xed\x0e\x7e\xce\x61\xfb\x4d\x9b\x11\x8b\x21\x05\x46\xde\x5a\x08\xfb\x9f\xe1\xc1\xf7\x52\xff\x98\xef\x5f\x7b\xa7\x5f\x9e\xe4\x51\xe0\xe7\x51\x9a\x78\x07\xfe\xfd\xc8\xb3\x1c\xee\x1d\x63\x63\x3e\x42\x9c\xee\xa2\xc4\xcb\x78\x96\x9d\x82\x51\x08\x1f\x08\xd5\xef\x08\x9d\xbf\x79\xb9\x00\x7b\x6b\x59\x2b\x01\x74\x90\x26\x19\x4f\xf2\x49\x31\xcf\x1f\x36\x20\x0d\xea\x3c\x80\x81\x26\xd9\x5a\x4c\x04\xd7\xa1\x5e\x0e\x55\x9b\x6d\x1f\x0c\xc2\xe4\x20\x5d\x64\x4d\xc0\xf5\xb3\x5e\xf8\x78\x87\x14\x1b\xd1\xf5\xcd\xcd\xaa\x9d\xa2\x7e\x09\x43\xb1\xb5\x99\x81\x16\x32\x04\x93\x3a\xf7\x42\x0a\x6f\xef\x27\x61\xcc\xc3\x02\xce\x76\x18\xe0\xa7\x8d\xcb\x5c\x98\x6b\x33\x00\x17\x2d\xd4\x19\xbc\xea\x07\x2a\x00\x64\xb8\x96\xc1\xde\x8f\x63\x9e\xec\x38\xac\x85\x09\x7f\x3e\xd4\x66\x8b\x95\x40\x54\x7b\x69\x26\xd5\x26\xa6\x1c\x2c\x51\x7e\x42\x4a\x75\xc4\x30\x40\x77\x6c\x97\x51\xb2\xb1\x99\x54\x8e\x57\xb2\x7a\x4f\x5f\xc0\x74\x28\x6e\xde\xd9\xf0\x1e\x1f\x61\x5e\x46\x16\x40\xd1\x44\x8a\xb6\x8e\xae\x10\xb4\x9a\xe2\xd8\x50\x14\x49\x27\xae\x4e\x0c\x54\x9f\x51\x29\x5d\xe2\xd4\x71\xf2\xda\xb1\xfb\x54\xca\x8f\xdc\x5f\x93\x5b\xa2\xf6\x0e\x6e\x87\xfd\xc8\xf7\x76\x10\x47\x3c\x51\xe8\xe5\xe5\x39\xe1\x6c\x39\x55\x88\x65\x14\x0e\x9a\x47\xf5\x39\xac\xe1\x14\x36\xa7\x20\xa1\xc5\x3c\x25\x08\x4a\x81\xca\x45\x1d\x57\x87\x86\x37\x0c\x2e\xc0\xf0\xd3\x29\xdf\x7c\xfd\xd0\x23\xaf\xfc\x6a\x92\xe4\xdf\xad\x65\x6d\x54\x7b\x14\x75\x3a\x7b\xa7\xb4\xf4\xf3\xd3\x31\x0b\xfc\x9c\x87\xe2\x7b\x1f\xd7\x5d\xbd\x2c\xfd\xfd\xa6\xb2\xbf\x29\xbc\x4a\x25\x6f\xd3\xae\x7f\x47\x5a\xec\xfa\x1c\x9b\x9f\x62\x17\x78\x76\x86\x3c\x37\xd7\x3d\x77\x7f\x97\x88\x24\xf4\x66\x4f\xa3\x66\xa2\x8e\xa9\x9b\x4c\xe3\xc8\xf5\x0f\xa4\x9f\xfb\x22\xe5\x5f\xb6\xd5\x7f\x28\x6e\x7c\xad\xba\x57\xb2\x5a\xfc\xf2\x8b\x59\xf5\x2f\xb3\x91\xfe\x48\x06\xec\xd8\xcf\x7f\x10\xab\xa7\x56\xde\xb2\x47\x2c\xc2\x62\x72\x85\x55\x58\x6d\x1e\xd5\x34\x57\xdd\x63\xc0\x98\x0c\xd2\x28\xcb\xd9\xef\x9c\x62\x7a\x35\xef\x9c\xf2\x96\x5b\xac\xe1\x5a\x97\xad\x48\x7d\x09\x9d\xb5\xde\xfd\x15\x00\x00\xff\xff\xd1\x64\x29\xf0\xfb\x12\x00\x00")

func migrationsSqlMysql7SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlMysql7Sql,
		"migrations/sql/mysql/7.sql",
	)
}

func migrationsSqlMysql7Sql() (*asset, error) {
	bytes, err := migrationsSqlMysql7SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/mysql/7.sql", size: 4859, mode: os.FileMode(438), modTime: time.Unix(1542546729, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgresGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlPostgresGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgresGitkeep,
		"migrations/sql/postgres/.gitkeep",
	)
}

func migrationsSqlPostgresGitkeep() (*asset, error) {
	bytes, err := migrationsSqlPostgresGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/.gitkeep", size: 0, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres4Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd0\xb1\x4a\xc6\x30\x10\xc0\xf1\x39\x7d\x8a\xdb\x3a\x48\x17\xd7\x4e\xd1\xc4\x29\xb6\x52\x12\x70\x0b\x47\x73\xb4\x01\xbd\x68\x9a\x22\xbe\xbd\x28\x0e\x45\x5a\xa8\x7c\xdf\x12\x32\xfd\xef\xee\xd7\x34\x70\xf3\x1a\xa7\x8c\x85\xc0\xbd\x55\xd2\x58\x3d\x80\x95\x77\x46\xc3\xfc\x19\x32\xfa\x84\x6b\x99\x6f\xfd\x98\x78\x21\x2e\x3e\xd3\xfb\x4a\x4b\x01\xa9\x14\xfc\xfe\x29\x78\x2c\x1e\xd7\x10\x89\x47\x02\xab\x9f\x2d\x74\xce\x18\x50\xfa\x41\x3a\x63\xa1\xae\xdb\xe3\xf0\xf7\x4b\x5c\xe2\x88\x25\x26\xbe\x7e\xff\xcf\xe2\x7e\x46\x0e\x2f\x14\x7e\x06\x4c\x19\xf9\x5c\x5e\x08\x21\xaa\xad\x95\x4a\x1f\x7c\x5e\x4b\x0d\xfd\x13\xdc\xf7\xc6\x3d\x76\xfb\x57\xfd\x1f\xe8\x92\xe4\x91\xc9\xb6\xb9\x63\xd3\x56\x5f\x01\x00\x00\xff\xff\x50\x71\xaa\x54\x2e\x02\x00\x00")

func migrationsSqlPostgres4SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres4Sql,
		"migrations/sql/postgres/4.sql",
	)
}

func migrationsSqlPostgres4Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres4SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/4.sql", size: 558, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres5Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x3d\x4f\xc3\x30\x10\x86\xf7\xfc\x0a\x8f\x54\xd0\x85\x35\x13\x22\x19\xba\xa4\x50\x11\x89\xcd\x72\xec\x2b\x3d\x04\x36\xf8\xce\x7c\xfc\x7b\x14\xd4\xaa\x51\x94\x0b\x8e\x98\x22\x45\xf7\xde\xf3\xe6\x89\xbd\x5e\xab\xcb\x57\x7c\x8a\x86\x41\xb5\x6f\xc5\xed\xae\xbe\x79\xa8\x55\xdb\x6c\xee\xdb\x5a\x6d\x9a\xaa\x7e\x54\x87\x6f\x17\x8d\x0e\x26\xf1\xe1\x5a\x87\x6e\x9f\xc8\x1a\x06\xa7\xfb\x17\xe0\x19\xad\x61\x0c\x5e\x13\x10\xfd\x3e\x83\x46\xf7\xa5\xb6\xcd\xc2\xa0\xba\xb0\x2f\x08\x9e\x35\xba\x2b\x45\xa9\x7b\x06\xcb\x83\xd4\xaa\x2c\x4e\xed\x26\x6a\xd9\xe0\xa9\xcf\x46\x78\x4f\x40\xac\x2d\xba\xc9\x16\xa3\xb9\x01\x73\x55\x2e\x58\x4f\xa9\xcb\x5b\x7f\xfc\x8e\xf3\x72\xd9\xec\x98\xf1\x01\x11\xf3\x20\xfd\xe4\x1e\x21\xce\x2b\x1a\x59\xff\xcb\xd4\xf4\x78\xae\x30\x01\x26\x79\x93\x60\x0b\xf4\x09\x44\xd1\xa2\x84\x1c\xca\x1c\x5e\x8e\x2a\x7c\xfa\xa2\xda\x6d\xef\xfe\x73\x2b\xca\x42\x5c\x21\x9c\xe0\x32\x3b\x70\x74\x9b\x1f\x38\xa9\x99\x29\x35\x7f\x66\x64\xd4\xfc\xef\x5f\x9c\x3b\x37\xfd\x09\x00\x00\xff\xff\xa9\xd8\x35\xfe\xaf\x04\x00\x00")

func migrationsSqlPostgres5SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres5Sql,
		"migrations/sql/postgres/5.sql",
	)
}

func migrationsSqlPostgres5Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres5SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/5.sql", size: 1199, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres6Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xa8\x4c\x29\x4a\x8c\xcf\x4f\x2c\x2d\xc9\x30\x8a\x4f\xce\xcf\x2b\x4e\xcd\x2b\x89\x2f\x4a\x2d\x2c\x4d\x2d\x2e\x51\x70\x74\x71\x51\x48\x4c\x2e\x52\x08\x71\x8d\x08\x51\xf0\x0b\xf5\xf1\x51\x70\x71\x75\x73\x0c\xf5\x09\x51\x50\x57\xb7\xe6\xe2\x42\x36\xd6\x25\xbf\x3c\x8f\x78\x83\x5d\x82\xfc\x03\x14\x9c\xfd\x7d\x42\x7d\xfd\x40\x16\x58\x73\x01\x02\x00\x00\xff\xff\x9e\x91\x43\x31\xa2\x00\x00\x00")

func migrationsSqlPostgres6SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres6Sql,
		"migrations/sql/postgres/6.sql",
	)
}

func migrationsSqlPostgres6Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres6SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/6.sql", size: 162, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlPostgres7Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x4d\x8f\x9b\x40\x0c\xbd\x47\xe2\x3f\xf8\xb6\x59\x55\x1b\xa9\xbd\x46\x39\x50\x70\xda\xa8\x2c\xac\x60\x50\xdb\x13\xa2\x30\x9b\xa0\x52\xd8\x06\xa2\xaa\xff\xbe\x22\x21\x2c\x05\x32\x5f\x90\xb4\x17\x0e\xcc\xd8\xcf\x6f\x6c\xbf\xf1\x3c\x3c\xc0\x9b\x1f\xc9\x76\x1f\x96\x14\xfc\x17\x6d\xa6\x5b\x04\x5d\x20\xfa\x7b\x0b\x61\xf7\x3b\xde\x87\x41\x1e\x1e\xca\xdd\xbb\xa0\xfa\xd2\xac\x4c\xa2\xb0\x4c\xf2\x2c\xd8\xd3\x9f\x07\x5a\x94\x70\xda\x6f\x38\x96\xff\x68\x43\x9a\x6f\x93\x2c\x28\x68\x51\x54\x5b\x92\x18\x4c\xd7\x79\x02\xdb\x21\x60\xfb\x96\xb5\x64\x78\x8f\xf2\xac\xa0\x59\x39\xb5\x5b\xf5\xa0\x4d\x5c\xeb\xbe\x45\x26\x8e\xf9\xd5\xab\x36\xf3\x9f\x4c\x9d\x88\xc5\xeb\x21\xe9\x3b\x5c\x1d\xd9\xc3\xe7\x8f\xe8\x62\x6f\x75\x75\x77\xb7\x1c\x86\xe8\x46\xad\xea\x5b\x9b\x55\x96\xe7\xbf\x7b\xfa\x92\x36\x51\xe7\x29\x85\x15\xd4\xbf\x8e\x5b\x4d\xb4\x90\x20\xac\x5d\xe7\x91\x19\x4d\xb0\x0b\xb3\x38\xa5\x71\x8d\x5c\xa5\x18\xbf\x6c\x3c\xe2\xc1\x5c\x9b\x01\x78\x68\xa1\x41\xe0\x2d\xdf\x51\xed\x40\x04\x6b\x11\xed\xc2\x34\xa5\xd9\xb6\x0a\x9a\x65\xf0\xba\x51\x9b\xdd\x2f\x19\xa4\x86\xb3\x78\x55\x6e\x6c\x48\x65\x8a\xe2\xd5\xdf\xb0\xd3\x4d\x13\x0c\xc7\xf6\x88\xab\x6f\x6c\x22\x64\x13\x34\xa8\xc1\xf3\x77\x58\x3b\x2e\x6e\x3e\xd8\xf0\x09\xbf\xc2\xbc\x59\xb9\x07\x17\xd7\xe8\xa2\x6d\xa0\xc7\x74\xda\x36\x71\x6c\xa8\x93\x64\xe8\x9e\xa1\x9b\x28\xaf\x15\x42\xbc\xd8\xa6\xe3\xe8\x0d\xfb\xe6\xb1\x14\x6f\xb9\xbf\x9a\xbc\xf1\x7a\xee\x71\xc9\x1a\x97\xa8\xed\x28\x4d\x68\x26\x51\xcb\x8b\x93\xc1\x49\x9d\xda\x2e\x16\x49\xac\xd4\x8f\xf2\x7d\xd8\xf1\x53\x6b\x9f\x04\x85\x01\x9d\x15\x00\x68\x08\x4a\x27\x75\x5c\x1e\x7a\xda\xa0\x9c\x00\xf5\xe8\xa4\x4f\xbe\x1b\xf4\xc8\x23\xbf\x19\x25\xf1\x7b\x6b\xd1\x69\x55\x0e\xa3\x8b\xca\x7e\x91\x5a\xfe\xed\xf9\x50\x44\x61\x49\x63\xf6\xb9\x8f\xab\x2e\x2e\x0a\xbf\xde\x64\x66\x33\x89\x5b\xa9\xc1\xed\xcb\xf5\x79\x65\x40\xae\x4f\x6b\xf3\x6a\x6d\x82\x6b\x47\xe5\xba\xb9\x6d\xdc\xfc\x2a\x61\x51\xe0\x5a\x5f\x87\xcd\x95\x2a\xa6\x2b\x32\xbd\x90\xbb\x1b\x84\xaf\xfb\xda\xe4\x5f\x96\xd5\x7f\x48\x6e\x7c\xae\x2e\x8f\x64\x9d\xf5\xe9\x07\x33\xce\xb3\xa9\xfd\x44\x6c\x3f\xce\xcd\xfc\x57\xa6\x30\x8e\x1f\x9f\x9d\x63\xe6\xf1\x11\x23\x33\x13\x5b\x62\x66\x96\x6b\x5c\x29\xc6\x6d\x95\x51\x68\x27\x15\x86\xa2\x90\x7c\x81\x65\xa2\xcb\x29\xec\x15\x8f\x78\x40\x3f\x6e\x74\xd2\x92\xc8\x13\xb0\xec\x54\xed\x9f\x00\x00\x00\xff\xff\x8d\xac\xf5\x12\x5d\x13\x00\x00")

func migrationsSqlPostgres7SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlPostgres7Sql,
		"migrations/sql/postgres/7.sql",
	)
}

func migrationsSqlPostgres7Sql() (*asset, error) {
	bytes, err := migrationsSqlPostgres7SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/postgres/7.sql", size: 4957, mode: os.FileMode(438), modTime: time.Unix(1542546729, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTestsGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func migrationsSqlTestsGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTestsGitkeep,
		"migrations/sql/tests/.gitkeep",
	)
}

func migrationsSqlTestsGitkeep() (*asset, error) {
	bytes, err := migrationsSqlTestsGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/.gitkeep", size: 0, mode: os.FileMode(438), modTime: time.Unix(1542278753, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests1_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\xc1\x8e\xd3\x30\x10\x86\xcf\x9b\xa7\x98\x5b\x52\xe1\x48\x5b\x90\xb8\x70\x42\x62\x0f\x2b\xa1\xae\xc4\xb6\x70\xb4\x1c\x7b\x92\x98\xa6\x76\x99\xb1\x29\x08\xf1\xee\x28\x4d\xd2\xa6\x69\x55\x0a\xe7\xbd\x44\x99\x89\x47\xfa\xbf\x2f\x93\xe4\x39\xbc\xda\xd8\x8a\x54\x40\x58\x6d\x93\xc7\xc5\xf3\xc3\xa7\x25\x3c\x2e\x96\x4f\xc9\x5d\xfd\xd3\x90\x92\x5e\xc5\x50\xbf\x96\xed\x15\x5d\xb0\x5a\x05\xeb\x9d\x64\x64\xb6\xde\x41\x66\x8d\x80\xd1\x33\x34\x52\x05\x01\x1c\x8b\xaf\xa8\xc3\x2c\xf9\xfc\xfe\xe3\xea\xe1\x39\xb9\xcb\xd2\x79\xde\xf8\xca\xba\xbc\x9f\xcc\xad\x49\x05\x2c\x9e\xbe\x64\x33\x01\xe9\x3c\xe7\x58\xa4\xb3\x77\xc9\xed\x09\x08\xbf\x45\xe4\x00\x99\xae\x55\xd3\xa0\xab\x50\xc0\x77\x24\x5b\x5a\x24\x01\xba\xb1\xe8\x82\x6c\xd3\xf5\x59\x04\xf4\x13\x32\x52\x23\x80\xd7\x76\x7b\x68\xa1\x91\xac\xfd\x16\x05\x68\xa6\xf2\x12\xd0\xf1\x60\x5b\x79\x6b\xb4\xd4\xde\x05\xfc\x31\x61\x3c\x84\x49\xf7\x54\x43\xa0\xae\xea\x42\xa5\x03\x6f\x9b\xaa\x2b\x08\x8d\xa5\xae\x2a\x55\xc3\xd8\x9d\x68\x13\xf5\x83\x4c\xe5\xd1\xd6\x20\xed\xd7\xef\xbf\x18\xd3\xde\x71\x6b\xe1\x45\xd5\xbf\xaa\x92\xb5\x72\xa6\x41\x73\xa2\xac\x22\xe5\x46\xfc\x84\x1b\xdc\x14\xad\xc1\xe1\x4e\x96\x9e\x04\x20\x91\xa7\xa9\x86\x7e\xeb\xa5\xd2\x1a\x99\x65\xf0\x6b\x74\xc7\xae\x35\x43\xe7\x5c\xe7\x4e\xb1\x8c\x8c\xe6\xaa\xbc\x41\x40\xa0\x88\x02\xde\xbc\xbd\xbf\xef\xa0\x4f\x0c\x4c\x5a\x7b\x7d\x53\x2b\x70\xc3\x27\x77\x51\xce\x68\x75\xae\x6a\x51\xfa\xcc\xcd\xff\x32\xc7\xe2\x22\x71\x3a\x3f\x7b\xff\x07\xd4\xf1\xef\xee\x83\xdf\xb9\xe4\x4f\x00\x00\x00\xff\xff\x15\x88\x2c\x70\x00\x05\x00\x00")

func migrationsSqlTests1_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests1_testSql,
		"migrations/sql/tests/1_test.sql",
	)
}

func migrationsSqlTests1_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests1_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/1_test.sql", size: 1280, mode: os.FileMode(438), modTime: time.Unix(1542541902, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests2_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x51\x6f\xd3\x30\x10\x80\x9f\x97\x5f\x71\x6f\x69\x85\x23\x8d\x22\xf1\xc2\x13\x12\x7b\x98\x84\x3a\x89\x6d\xf0\x68\xb9\xf6\xa5\x35\x4b\xed\x72\x67\x33\x10\xe2\xbf\x23\xd7\x49\x93\x26\xdd\xa8\xf6\x02\x2f\x55\xef\xe2\x6b\xbf\xfb\x72\xe7\xaa\x82\x57\x5b\xbb\x26\x15\x10\xee\x77\xc5\xf5\xf2\xf6\xea\xd3\x1d\x5c\x2f\xef\x6e\x8a\x8b\xcd\x4f\x43\x4a\x7a\x15\xc3\x66\x21\xd3\x27\xba\x60\xb5\x0a\xd6\x3b\xc9\xc8\x6c\xbd\x83\x99\x35\x02\x06\xcf\xd0\x48\x15\x04\x70\x5c\x7d\x45\x1d\xe6\xc5\xe7\xf7\x1f\xef\xaf\x6e\x8b\x8b\x59\xb9\xa8\x1a\xbf\xb6\xae\x6a\x2b\x2b\x6b\x4a\x01\xcb\x9b\x2f\xb3\xb9\x80\x72\x51\x71\x5c\x95\xf3\x77\xc5\xf9\x04\x84\xdf\x22\x72\x80\x99\xde\xa8\xa6\x41\xb7\x46\x01\xdf\x91\x6c\x6d\x91\x04\xe8\xc6\xa2\x0b\x32\xd1\xb5\x2c\x02\xda\x0a\x19\xa9\x11\xc0\x0f\x76\x77\x48\xa1\x91\xac\xfd\x0e\x05\x68\xa6\xfa\x54\x43\xfd\xc1\x14\x79\x6b\xb4\xd4\xde\x05\xfc\x31\xea\xf1\x00\x53\xee\xbb\xea\x80\x72\x94\xa1\xca\xae\xdf\x44\x95\x03\x42\x63\x29\x47\xb5\x6a\x18\xf3\x89\x44\xd4\x16\x32\xd5\xbd\xad\x4e\xda\xaf\xdf\x7f\x31\xa6\xbd\xe3\x64\xe1\x7f\x51\x25\xa0\xf6\xa4\xd3\x2f\xe4\xff\x91\xd6\xa4\xd2\x84\xf1\x4f\x2d\xee\x9f\x66\xb4\x33\xe6\x70\x64\x55\x6e\x94\x33\x0d\x9a\x23\xbb\x6b\x52\x6e\xa0\x8a\x70\x8b\xdb\x55\x92\xdd\x7d\x93\xb5\x27\x01\x48\xe4\x69\x6c\xac\x5d\x10\xa9\xb4\x46\x66\x19\xfc\x03\xba\x3e\x6b\x4d\x97\x99\x9a\x7f\x54\x2c\x23\xa3\x79\x56\x66\x27\x24\x50\x44\x01\x6f\xde\x5e\x5e\x76\x12\x8e\x8d\x0c\x53\x7b\x9d\x2f\xd9\xce\x93\x72\x06\x53\xf6\xac\x16\xa5\x27\x6e\x9e\xee\xf9\xa5\xb3\x95\xde\xf7\x29\x19\xe5\xeb\xc9\xa8\xf4\x43\x75\xf6\xac\xf8\x55\x1d\xb9\x85\x7d\xe2\x02\x3d\xd8\x98\xee\xe1\xa0\xfc\xb8\x87\x0c\x3d\xda\x85\xfe\xf0\x1e\x6a\x78\xb3\x7f\xf0\x8f\xae\xf8\x13\x00\x00\xff\xff\x53\x55\x52\xb3\xeb\x05\x00\x00")

func migrationsSqlTests2_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests2_testSql,
		"migrations/sql/tests/2_test.sql",
	)
}

func migrationsSqlTests2_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests2_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/2_test.sql", size: 1515, mode: os.FileMode(438), modTime: time.Unix(1542541902, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests3_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x95\xc1\x6e\x13\x31\x10\x86\xcf\xdd\xa7\x98\xdb\x26\xc2\x2b\x15\x22\x71\xe1\x84\x44\x0f\x95\x50\x2a\xd1\x16\x8e\x96\x63\xcf\x26\xa6\x1b\x3b\xcc\x78\x29\x08\xf1\xee\xc8\xeb\x78\x77\xd3\x4d\x57\xc0\x05\x2e\x51\x66\xec\x71\xfe\xf9\xe6\xb7\x53\x55\xf0\x62\x6f\xb7\xa4\x02\xc2\xfd\xa1\xb8\x5e\xdf\x5e\x7d\xb8\x83\xeb\xf5\xdd\x4d\x71\xb1\xfb\x6e\x48\x49\xaf\xda\xb0\x7b\x25\xe3\x27\xba\x60\xb5\x0a\xd6\x3b\xc9\xc8\x6c\xbd\x83\x85\x35\x02\x46\x6b\x68\xa4\x0a\x02\xb8\xdd\x7c\x46\x1d\x96\xc5\xc7\xb7\xef\xef\xaf\x6e\x8b\x8b\x45\xb9\xaa\x1a\xbf\xb5\xae\x3a\x56\x56\xd6\x94\x02\xd6\x37\x9f\x16\x4b\x01\xe5\xaa\xe2\x76\x53\x2e\xdf\x14\xbf\xaf\x80\xf0\x4b\x8b\x1c\x60\xa1\x77\xaa\x69\xd0\x6d\x51\xc0\x57\x24\x5b\x5b\x24\x01\xba\xb1\xe8\x82\x8c\xea\x8e\x5a\x04\x1c\x2b\x64\x4b\x8d\x00\x7e\xb0\x87\x3e\x85\x46\xb2\xf6\x07\x14\xa0\x99\xea\x73\x0d\x0d\x1b\x63\xe4\xad\xd1\x52\x7b\x17\xf0\x5b\x10\xd0\xf5\x95\x89\x48\x6b\x4e\xbb\xee\xe5\x95\x5d\x9f\x59\x62\x8a\x92\xcc\x32\x13\x88\x3a\x53\x40\x68\x2c\xa5\xa8\x56\x0d\x63\xda\x11\x35\x1e\x0b\x99\xea\x81\x5f\xc6\xf8\xe3\x67\x5a\x9d\x90\x9e\x27\xab\xbd\xe3\x48\xeb\xff\x41\x5a\x7b\xd2\xf1\x84\xf4\x3b\xd2\x9a\x58\x9a\x64\x3c\xa5\x9d\x33\xbd\xe6\x7f\x8f\x3f\xa9\xef\x2c\x7d\x7e\x1c\xe9\x8c\x5e\xd9\x1f\x4d\x47\xee\x94\x33\x0d\x9a\x93\x29\x6d\x49\xb9\x11\x72\xc2\x3d\xee\x37\x91\x56\xfe\x26\x6b\x4f\x02\x90\xc8\xd3\x53\xf2\x19\xa5\xd2\x1a\x99\x65\xf0\x0f\xe8\x86\xac\x35\x39\x33\x9d\xe0\xa3\x62\xd9\x32\xce\x1b\x3e\x53\x0b\xd4\xa2\x80\xd5\xeb\xcb\xcb\x4c\xea\x14\xdb\x38\xd5\x31\xff\x9b\xd7\xe0\x2c\x9c\x91\x5b\x67\xb1\x28\x3d\x61\xf3\x7c\xcf\x33\x1e\x9d\xc7\xd1\x99\x62\x0a\xa3\x7c\x39\xf1\xd3\xe0\xbc\x91\xa1\xe6\xa9\xf8\x4d\xdd\xf2\x51\xec\x33\x0f\x76\x4f\x63\x7a\x9f\x47\xe5\xa7\x3d\xf4\x4e\x1e\x5f\x98\x61\x73\x27\x6a\xfc\x4f\xf2\xce\x3f\xba\xe2\x57\x00\x00\x00\xff\xff\x9b\xc0\xd7\x59\x5b\x06\x00\x00")

func migrationsSqlTests3_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests3_testSql,
		"migrations/sql/tests/3_test.sql",
	)
}

func migrationsSqlTests3_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests3_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/3_test.sql", size: 1627, mode: os.FileMode(438), modTime: time.Unix(1542541902, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests4_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x95\xc1\x6e\xdb\x30\x0c\x86\xcf\xf5\x53\xe8\xe6\x04\x93\x81\x6e\x0b\x76\xd9\x69\xc0\x7a\x28\x30\xa4\xc0\xda\x6e\x47\x41\x91\xe8\x44\xab\x23\x65\xa4\xb4\x6e\x18\xf6\xee\x83\xac\x28\x56\xea\xd4\x6d\x6f\xbd\x04\x21\x4d\x5a\x3f\xbf\x9f\xb6\x9b\x86\xbd\xd9\x9a\x35\x4a\x0f\xec\x76\x57\x5d\x2e\xaf\x2f\xbe\xde\xb0\xcb\xe5\xcd\x55\x75\xb6\xf9\xa3\x51\x0a\x27\x83\xdf\xbc\x13\xf1\x17\xac\x37\x4a\x7a\xe3\xac\x20\x20\x32\xce\xb2\x99\xd1\x9c\x15\xd7\x40\x0b\xe9\x39\xa3\xb0\xfa\x01\xca\xcf\xab\x6f\x9f\xbe\xdc\x5e\x5c\x57\x67\xb3\x7a\xd1\x74\x6e\x6d\x6c\xb3\xef\x6c\x8c\xae\x39\x5b\x5e\x7d\x9f\xcd\x39\xab\x17\x0d\x85\x55\x3d\xff\x58\x3d\x5f\x01\xc2\xcf\x00\xe4\xd9\x4c\x6d\x64\xd7\x81\x5d\x03\x67\xbf\x00\x4d\x6b\x00\x39\x53\x9d\x01\xeb\x45\x54\xb7\xd7\xc2\xd9\xbe\x43\x04\xec\x38\xa3\x3b\xb3\x3b\xa4\x40\x0b\x52\x6e\x07\x9c\x29\xc2\xf6\xd4\x40\x43\x61\x8c\x9c\xd1\x4a\x28\x67\x3d\xfc\xf6\x9c\xf5\x73\x65\x22\xfd\x91\x65\xb5\x90\x41\x1b\xb0\x0a\x8e\x61\x1c\x54\xd7\xfd\xf8\x59\x79\x8a\x92\xfa\x3a\x83\x89\xf2\x53\x80\xa0\x0d\xa6\xa8\x95\x1d\x41\xaa\x88\xd2\xf7\x8d\x84\xed\x80\x35\xd3\xfd\xfb\x2f\x5d\x3d\x61\x40\xbd\x68\x64\xd0\x4f\x90\x57\xce\x52\xa4\xf9\x7a\x90\xb7\x0e\x55\xbc\x43\x3a\x47\x18\x1d\x5b\x93\x8c\xb1\x1b\x29\x53\x68\x7e\xa5\xf6\xa4\xa1\xfa\x27\x61\xc2\xae\x07\xca\x5e\xec\x9e\xd8\x48\xab\x3b\xd0\x47\x2e\xae\x51\xda\xc2\x12\x84\x2d\x6c\x57\x91\x66\xfe\x27\x5a\x87\x9c\x01\xa2\xc3\x87\xce\x64\xd4\x52\x29\x20\x12\xde\xdd\x81\x1d\xb2\x46\xe7\xcc\xd8\xe1\x7b\x49\x22\x10\xe8\xe1\xfc\xe7\xfa\x91\x99\x7a\x0c\xc0\xd9\xfb\x0f\xe7\xe7\x99\xe3\x31\xd4\x32\x35\x38\xf2\x34\xb3\xd3\xef\x9a\x93\xe8\x8a\x5d\x9f\x84\x26\xd5\x88\xdc\x14\x91\x47\x37\x7c\x9a\x4b\xbf\x3b\x63\x2a\xf5\xdb\xd1\xda\x0d\x38\x8a\xbd\x9b\xa6\xe2\x56\x6d\xa0\xbd\xd8\x47\x3e\x07\x07\x1a\xe3\xb7\x41\xd1\x7e\x3c\xc3\x61\xe1\xcb\xe7\x6a\x28\xee\x45\x95\xdf\xa9\xcf\xee\xde\x56\xff\x03\x00\x00\xff\xff\x54\x2b\x8b\x72\xb9\x06\x00\x00")

func migrationsSqlTests4_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests4_testSql,
		"migrations/sql/tests/4_test.sql",
	)
}

func migrationsSqlTests4_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests4_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/4_test.sql", size: 1721, mode: os.FileMode(438), modTime: time.Unix(1542541902, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests5_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x95\xc1\x6e\xdb\x30\x0c\x86\xcf\xf5\x53\xe8\xe6\x04\x93\x81\x6e\x43\x76\xd9\x69\xc0\x7a\x28\x30\xa4\xc0\xda\x6e\x47\x41\x91\xe8\x44\xab\x23\x65\xa4\xb4\x6e\x18\xf6\xee\x83\xac\x28\x56\xea\xd4\x6d\x6f\xbd\x04\x21\x4d\x5a\x3f\xbf\x9f\xb6\x9b\x86\xbd\xd9\x9a\x35\x4a\x0f\xec\x76\x57\x5d\x2e\xaf\x2f\xbe\xde\xb0\xcb\xe5\xcd\x55\x75\xb6\xf9\xa3\x51\x0a\x27\x83\xdf\xbc\x13\xf1\x17\xac\x37\x4a\x7a\xe3\xac\x20\x20\x32\xce\xb2\x99\xd1\x9c\x15\xd7\x40\x0b\xe9\x39\xa3\xb0\xfa\x01\xca\xcf\xab\x6f\x9f\xbe\xdc\x5e\x5c\x57\x67\xb3\x7a\xd1\x74\x6e\x6d\x6c\xb3\xef\x6c\x8c\xae\x39\x5b\x5e\x7d\x9f\xcd\x39\xab\x17\x0d\x85\x55\x3d\xff\x58\x3d\x5f\x01\xc2\xcf\x00\xe4\xd9\x4c\x6d\x64\xd7\x81\x5d\x03\x67\xbf\x00\x4d\x6b\x00\x39\x53\x9d\x01\xeb\x45\x54\xb7\xd7\xc2\xd9\xbe\x43\x04\xec\x38\xa3\x3b\xb3\x3b\xa4\x40\x0b\x52\x6e\x07\x9c\x29\xc2\xf6\xd4\x40\x43\x61\x8c\x9c\xd1\x4a\x28\x67\x3d\xfc\xf6\x9c\xf5\x73\x65\x22\xfd\x91\x65\xb5\x90\x41\x1b\xb0\x0a\x8e\x61\x1c\x54\xd7\xfd\xf8\x59\x79\x8a\x92\xfa\x3a\x83\x89\xf2\x53\x80\xa0\x0d\xa6\xa8\x95\x1d\x41\xaa\x88\xd2\xf7\x8d\x84\xed\x80\x35\xd3\xfd\xfb\x2f\x5d\x3d\x61\x40\xbd\x68\x64\xd0\x4f\x90\x57\xce\x52\xa4\xf9\x7a\x90\xb7\x0e\x55\xbc\x43\x3a\x47\x18\x1d\x5b\x93\x8c\xb1\x1b\x29\x53\x68\x7e\xa5\xf6\xa4\xa1\xfa\x27\x61\xc2\xae\x07\xca\x5e\xec\x9e\xd8\x48\xab\x3b\xd0\x47\x2e\xae\x51\xda\xc2\x12\x84\x2d\x6c\x57\x91\x66\xfe\x27\x5a\x87\x9c\x01\xa2\xc3\x87\xce\x64\xd4\x52\x29\x20\x12\xde\xdd\x81\x1d\xb2\x46\xe7\xcc\xd8\xe1\x7b\x49\x22\x10\xe8\xe1\xfc\xe7\xfa\x91\x99\x7a\x0c\xc0\xd9\xfb\x0f\xe7\xe7\x99\xe3\x31\xd4\x32\x35\x38\xf2\x34\xb3\xd3\xef\x9a\x93\xe8\x8a\x5d\x9f\x84\x26\xd5\x88\xdc\x14\x91\x47\x37\x7c\x9a\x4b\xbf\x3b\x63\x2a\xf5\xdb\xd1\xda\x0d\x38\x8a\xbd\x9b\xa6\xe2\x56\x6d\xa0\xbd\xd8\x47\x3e\x07\x07\x1a\xe3\xb7\x41\xd1\x7e\x3c\xc3\x61\xe1\xcb\xe7\x6a\x28\xee\x45\x95\xdf\xa9\xcf\xee\xde\x56\xff\x03\x00\x00\xff\xff\x13\xe6\x61\xb9\xb9\x06\x00\x00")

func migrationsSqlTests5_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests5_testSql,
		"migrations/sql/tests/5_test.sql",
	)
}

func migrationsSqlTests5_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests5_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/5_test.sql", size: 1721, mode: os.FileMode(438), modTime: time.Unix(1542541902, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests6_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x5d\x6b\xdb\x30\x14\x86\xaf\xeb\x5f\x71\xee\x9c\x32\x79\xf4\x03\xb2\x8b\x5d\x0d\xd6\x8b\xc2\x68\x61\x6d\xb7\x4b\x21\x4b\xc7\xf1\x59\x5c\x29\x93\xe4\xa6\x65\xec\xbf\x0f\xd9\x71\x6c\x27\x4e\xd2\x6d\xd0\x8c\x35\x50\x8a\x25\x4b\xf2\xab\xe7\x3d\xfa\x38\x49\x12\x78\x73\x4f\x13\x2b\x3c\xc2\xdd\x2c\xba\xbc\xba\xb9\xf8\x7c\x0b\x97\x57\xb7\xd7\xd1\x51\xfe\xa4\xac\xe0\x46\x94\x3e\x3f\xe3\xe1\x3f\x6a\x4f\x52\x78\x32\x9a\x3b\x74\x8e\x8c\x86\x11\x29\x06\x9d\x77\xa8\xb8\xf0\x0c\x5c\x99\x7e\x43\xe9\x8f\xa3\x2f\x1f\x3e\xdd\x5d\xdc\x44\x47\xa3\x78\x9c\x14\x66\x42\x3a\x59\xf4\x4c\x48\xc5\x0c\xae\xae\xbf\x8e\x8e\x19\xc4\xe3\xc4\x95\x69\x7c\xfc\x3e\x7a\xbe\x02\x8b\xdf\x4b\x74\x1e\x46\x32\x17\x45\x81\x7a\x82\x0c\x1e\xd0\x52\x46\x68\x19\xc8\x82\x50\x7b\x1e\xd4\x2d\xb4\x30\x58\xf4\xe0\xa5\x2d\x18\xb8\x29\xcd\x96\x55\xa8\xb8\x93\x66\x86\x0c\xa4\xb3\xd9\xd0\x84\xda\x86\xa1\x64\x48\x49\x2e\x8d\xf6\xf8\xe8\x19\x54\xf3\x6a\x88\x54\x9f\xec\xb6\xe6\xa2\x54\x84\x5a\x62\x1f\xc6\x52\x75\x5c\x4d\xbf\x51\x5e\x97\x6a\xf5\x71\x03\x26\xc8\xaf\x0b\x16\x15\xd9\xba\x94\x89\xc2\x61\xdd\x22\x48\x5f\x74\x74\x36\x6b\xb1\x36\x74\x7f\xfc\xac\xdf\x0e\x18\x10\x8f\x13\x51\xaa\x1d\xe4\xa5\xd1\x2e\xd0\xfc\x77\x90\x67\xc6\xca\x30\x42\xfd\x1d\x4e\x2a\x74\xad\x65\xac\xbb\x51\xd7\x74\x34\x0f\xda\xc3\x40\x48\xbb\x7f\x8f\xea\x99\x55\xcb\x61\x8b\x67\x2b\xca\x82\x85\xf5\x83\xb4\xbf\xe7\x25\xcf\x85\x56\x05\xaa\x9e\xa7\x13\x2b\x74\xc7\x20\x8b\xf7\x78\x9f\x06\xb6\xcd\x13\xcf\x8c\x65\x80\xd6\x1a\xbb\xea\x53\x03\x5e\x48\x89\xce\x71\x6f\xa6\xa8\xdb\x5a\x52\x4d\xcd\xba\xdf\x73\xe1\x78\xe9\x50\xb5\xdf\x7f\xee\xe2\x69\xe0\x7a\x5b\x22\x83\xf3\xf1\xc9\x49\x03\xb4\x4f\xb7\x5b\xd5\x5a\xb3\x3b\xfe\x87\x77\x9e\x41\x74\x9d\xc8\xdf\x0a\x4d\xc8\x35\x72\xdb\x88\x6c\x8c\xf7\xed\x5c\xaa\x20\x5a\xa7\x12\x9f\xae\xc5\x5f\x8b\xa3\x13\x80\xdb\xa9\x98\x34\x2b\xdd\x42\xec\x86\xc3\x61\x49\x63\x7d\x6f\xe8\x74\xef\xcf\x61\x19\xf9\xdd\x05\xd6\x36\xae\x44\x25\x09\xdc\xe6\xe4\x20\xfc\xe9\x10\xd1\xe4\x3c\x6a\x0f\x4a\x78\x01\x6e\x86\x92\x32\x92\xa2\x28\x9e\x80\xb4\x43\xeb\x51\x05\x82\xe0\x73\x04\x29\x1c\xc2\x3c\x47\x8b\x30\x47\xc8\xc5\x03\xf6\x87\x70\x3e\x1c\x85\x29\x66\xc6\x22\xe0\x23\xca\xd2\x93\x9e\x40\x7d\x46\x86\x49\xbd\x83\x79\x4e\x32\x07\xa1\x94\x0b\xa3\x22\x4d\x34\x4c\xf1\x09\xc2\x20\xde\x0a\xd2\xde\xbd\x7d\x35\xc7\x58\x9a\x4d\x4f\x57\xc3\xae\xaa\x7b\x81\xcd\x92\x12\x65\x12\x6d\x7c\x82\x8f\xe4\x7c\xef\x30\x7b\x45\xf8\xcf\x06\xf0\x9f\xf5\xf0\x0f\x71\x3a\xdc\x2a\xf6\x76\xab\xd8\xe7\x92\x79\xde\xfd\x62\xd3\xc2\xea\x5e\x31\x0e\xbe\x0e\xf8\xba\x7b\x2d\xbe\x90\xaf\x43\x0e\xee\xb8\x33\x1e\x0c\x1d\x30\xf4\x7c\xc0\xd0\xf3\x97\xdc\x5c\x0f\xe9\xc0\xce\x74\x60\xc8\x81\x34\x9b\xfe\x65\x56\x10\x46\xf8\x6f\x32\x83\x8d\x88\xfe\x24\x41\x08\x1d\xf7\x9d\x24\xb4\xe2\x37\xce\x6d\x25\x65\x88\xba\xbf\x74\x7d\x34\x73\x1d\xfd\x0a\x00\x00\xff\xff\x91\x7d\xd0\x15\xfb\x12\x00\x00")

func migrationsSqlTests6_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests6_testSql,
		"migrations/sql/tests/6_test.sql",
	)
}

func migrationsSqlTests6_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests6_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/6_test.sql", size: 4859, mode: os.FileMode(438), modTime: time.Unix(1542546566, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrationsSqlTests7_testSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x95\x41\x6f\xd3\x30\x14\xc7\xcf\xcb\xa7\x78\xb7\xb4\xc2\x91\x06\x48\xf4\xc0\x09\x89\x1d\x26\xa1\x4e\x62\x1b\x1c\x2d\xd7\x7e\x69\xcd\x52\xbb\x3c\xdb\x0c\x84\xf8\xee\xc8\x71\xd2\xb8\x4b\x96\x8d\x13\xbb\x54\xf1\xcb\x7b\xf5\xff\xfd\xfe\xcf\x71\x55\xc1\xab\xbd\xde\x92\xf0\x08\xb7\x87\xe2\x72\x7d\x7d\xf1\xf9\x06\x2e\xd7\x37\x57\xc5\xd9\xee\x97\x22\xc1\xad\x08\x7e\xf7\x86\xc7\x5f\x34\x5e\x4b\xe1\xb5\x35\xdc\xa1\x73\xda\x1a\x58\x68\xc5\x20\x7b\x87\x8a\x0b\xcf\xc0\x85\xcd\x37\x94\x7e\x59\x7c\xf9\xf0\xe9\xf6\xe2\xba\x38\x5b\x94\xab\xaa\xb1\x5b\x6d\xaa\xae\xb2\xd2\xaa\x64\xb0\xbe\xfa\xba\x58\x32\x28\x57\x95\x0b\x9b\x72\xf9\xbe\x78\xbe\x02\xc2\xef\x01\x9d\x87\x85\xdc\x89\xa6\x41\xb3\x45\x06\x3f\x90\x74\xad\x91\x18\xc8\x46\xa3\xf1\x3c\xaa\xeb\xb4\x30\xe8\x2a\x78\xa0\x86\x81\xbb\xd3\x87\x63\x08\x15\x77\xd2\x1e\x90\x81\x74\x54\x4f\x35\x34\x24\xc6\x95\xd5\x4a\x72\x69\x8d\xc7\x9f\x9e\x41\xdb\x57\x4f\xa4\xdd\x32\xcf\xe6\x22\x28\x8d\x46\xe2\x29\x8c\xa3\xea\xb2\x6d\xbf\x57\x9e\x56\x49\x7d\xd9\x83\x89\xf2\xd3\x82\x50\x69\x4a\xab\x5a\x34\x0e\x53\x46\x94\xde\x15\x3a\xaa\x07\xac\x3d\xdd\xdf\x7f\xd2\xdb\x09\x03\xca\x55\x25\x82\x7a\x82\xbc\xb4\xc6\x45\x9a\x2f\x07\x79\x6d\x49\xc6\x7f\x48\xfb\x70\xad\x62\x69\x92\x31\x76\x23\x45\x32\xcd\x93\xf6\x30\x10\x92\xfe\xbf\x47\xa9\xb3\xf6\x38\xcc\x78\xf6\x40\x59\xb4\x30\x3d\x48\xfa\x37\x2f\xf9\x4e\x18\xd5\xa0\x3a\xf1\x74\x4b\xc2\x64\x06\x11\xee\x71\xbf\x89\x6c\xfb\x27\x5e\x5b\x62\x80\x44\x96\x1e\xfa\xd4\x83\x17\x52\xa2\x73\xdc\xdb\x3b\x34\x43\x54\xab\x3e\x32\xf6\xfb\x5e\x38\x1e\x1c\xaa\x61\xff\xe7\x1e\x9e\x1e\xae\xa7\x80\x0c\xde\xbe\x3b\x3f\xef\x81\x9e\xd2\xcd\x43\x83\x35\x4f\xcf\xff\xf4\x97\x67\x12\x5d\x36\xf9\xb3\xd0\x84\x1c\x91\x9b\x23\xf2\xe8\xbc\xcf\x73\x69\x87\x68\x4c\xa5\x7c\x3d\x9a\xbf\x01\x47\x36\x80\xf3\x54\xec\xa6\x0e\xae\x13\xfb\xc8\xe5\x70\xa4\x31\xfe\x36\x64\xe5\xa7\x3d\x1c\x27\x3f\x3f\x60\x43\x72\x2b\x2a\xbf\xb5\x3e\xda\x7b\x53\xfc\x0d\x00\x00\xff\xff\x3a\xe5\x6d\xc6\xc7\x06\x00\x00")

func migrationsSqlTests7_testSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrationsSqlTests7_testSql,
		"migrations/sql/tests/7_test.sql",
	)
}

func migrationsSqlTests7_testSql() (*asset, error) {
	bytes, err := migrationsSqlTests7_testSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/sql/tests/7_test.sql", size: 1735, mode: os.FileMode(438), modTime: time.Unix(1542541851, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/sql/shared/.gitkeep":   migrationsSqlSharedGitkeep,
	"migrations/sql/shared/1.sql":      migrationsSqlShared1Sql,
	"migrations/sql/shared/2.sql":      migrationsSqlShared2Sql,
	"migrations/sql/shared/3.sql":      migrationsSqlShared3Sql,
	"migrations/sql/mysql/.gitkeep":    migrationsSqlMysqlGitkeep,
	"migrations/sql/mysql/4.sql":       migrationsSqlMysql4Sql,
	"migrations/sql/mysql/5.sql":       migrationsSqlMysql5Sql,
	"migrations/sql/mysql/6.sql":       migrationsSqlMysql6Sql,
	"migrations/sql/mysql/7.sql":       migrationsSqlMysql7Sql,
	"migrations/sql/postgres/.gitkeep": migrationsSqlPostgresGitkeep,
	"migrations/sql/postgres/4.sql":    migrationsSqlPostgres4Sql,
	"migrations/sql/postgres/5.sql":    migrationsSqlPostgres5Sql,
	"migrations/sql/postgres/6.sql":    migrationsSqlPostgres6Sql,
	"migrations/sql/postgres/7.sql":    migrationsSqlPostgres7Sql,
	"migrations/sql/tests/.gitkeep":    migrationsSqlTestsGitkeep,
	"migrations/sql/tests/1_test.sql":  migrationsSqlTests1_testSql,
	"migrations/sql/tests/2_test.sql":  migrationsSqlTests2_testSql,
	"migrations/sql/tests/3_test.sql":  migrationsSqlTests3_testSql,
	"migrations/sql/tests/4_test.sql":  migrationsSqlTests4_testSql,
	"migrations/sql/tests/5_test.sql":  migrationsSqlTests5_testSql,
	"migrations/sql/tests/6_test.sql":  migrationsSqlTests6_testSql,
	"migrations/sql/tests/7_test.sql":  migrationsSqlTests7_testSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"sql": &bintree{nil, map[string]*bintree{
			"mysql": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlMysqlGitkeep, map[string]*bintree{}},
				"4.sql":    &bintree{migrationsSqlMysql4Sql, map[string]*bintree{}},
				"5.sql":    &bintree{migrationsSqlMysql5Sql, map[string]*bintree{}},
				"6.sql":    &bintree{migrationsSqlMysql6Sql, map[string]*bintree{}},
				"7.sql":    &bintree{migrationsSqlMysql7Sql, map[string]*bintree{}},
			}},
			"postgres": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlPostgresGitkeep, map[string]*bintree{}},
				"4.sql":    &bintree{migrationsSqlPostgres4Sql, map[string]*bintree{}},
				"5.sql":    &bintree{migrationsSqlPostgres5Sql, map[string]*bintree{}},
				"6.sql":    &bintree{migrationsSqlPostgres6Sql, map[string]*bintree{}},
				"7.sql":    &bintree{migrationsSqlPostgres7Sql, map[string]*bintree{}},
			}},
			"shared": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{migrationsSqlSharedGitkeep, map[string]*bintree{}},
				"1.sql":    &bintree{migrationsSqlShared1Sql, map[string]*bintree{}},
				"2.sql":    &bintree{migrationsSqlShared2Sql, map[string]*bintree{}},
				"3.sql":    &bintree{migrationsSqlShared3Sql, map[string]*bintree{}},
			}},
			"tests": &bintree{nil, map[string]*bintree{
				".gitkeep":   &bintree{migrationsSqlTestsGitkeep, map[string]*bintree{}},
				"1_test.sql": &bintree{migrationsSqlTests1_testSql, map[string]*bintree{}},
				"2_test.sql": &bintree{migrationsSqlTests2_testSql, map[string]*bintree{}},
				"3_test.sql": &bintree{migrationsSqlTests3_testSql, map[string]*bintree{}},
				"4_test.sql": &bintree{migrationsSqlTests4_testSql, map[string]*bintree{}},
				"5_test.sql": &bintree{migrationsSqlTests5_testSql, map[string]*bintree{}},
				"6_test.sql": &bintree{migrationsSqlTests6_testSql, map[string]*bintree{}},
				"7_test.sql": &bintree{migrationsSqlTests7_testSql, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
